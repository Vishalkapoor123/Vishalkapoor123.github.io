{"version":3,"sources":["./src/app/models/login.model.ts","./src/app/models/message.model.ts","./src/app/jwt-client.service.ts","./src/app/auth-guard.service.ts","./src/app/update-profile/update-profile.component.ts","./src/app/update-profile/update-profile.component.html","./src/app/studentliveconnect/studentliveconnect.component.ts","./src/app/studentliveconnect/studentliveconnect.component.html","./src/environments/environment.ts","./src/app/PagerService.ts","./src/app/log-in-page/log-in-page.component.ts","./src/app/log-in-page/log-in-page.component.html","./src/app/session.service.ts","./src/app/student-profile.service.ts","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/mentor-profile.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/chat-history/chat-history.component.ts","./src/app/chat-history/chat-history.component.html","./src/app/student-profile/student-profile.component.ts","./src/app/student-profile/student-profile.component.html","./src/app/models/mentor.model.ts","./src/app/app.module.ts","./src/app/registeration-page/registeration-page.component.ts","./src/app/registeration-page/registeration-page.component.html","./src/app/services/messaging.service.ts","./src/app/auth.service.ts","./src/app/feedback.service.ts","./src/app/services/authentication.service.ts","./src/app/faq/faq.component.ts","./src/app/faq/faq.component.html","./src/app/faq-by-subject/faq-by-subject.component.ts","./src/app/faq-by-subject/faq-by-subject.component.html","./src/app/mentor-registration/mentor-registration.component.ts","./src/app/mentor-registration/mentor-registration.component.html","./src/app/feedback/feedback.component.ts","./src/app/feedback/feedback.component.html","./src/app/models/register.model.ts","./src/app/models/feedback.model.ts","./src/app/landing-page/landing-page.component.ts","./src/app/landing-page/landing-page.component.html","./src/app/chat-application/chat-application.component.ts","./src/app/chat-application/chat-application.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/models/faq.model.ts","./src/app/mentor-profile/mentor-profile.component.ts","./src/app/mentor-profile/mentor-profile.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class LoginModel{\r\n    email: String;\r\n    password: String;\r\n    role:String;\r\n}","\r\n\r\nexport class MessageModel{\r\n  messageContent: String;\r\n  userName: String;\r\n  timeStamp:String;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtClientService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public generateToken(request){\r\n    // console.log(this.http.post(\"http://localhost:8080/authenticate\",request,\r\n    // {responseType: 'text' as 'json'}))\r\n    return this.http.post(\"http://localhost:8080/authentication-service/authenticate\",request);\r\n}\r\n\r\n// public welcome(token){\r\n//   let tokenStr = \"Bearer \"+token;\r\n//   const headers = new HttpHeaders().set(\"Authorization\",tokenStr);\r\n//   return this.http.get(\"http://localhost:8081/hello\",\r\n//   {headers,responseType : 'text' as 'json'})\r\n\r\n//   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router, private snackbar:MatSnackBar) {}\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.snackbar\r\n      .open((\"Oops! You can't access that page. You need to login first\"), '', {\r\n\r\n        verticalPosition: 'top',\r\n        duration:4000\r\n      })\r\n      // .onAction().subscribe(()=>this.router.navigate(['login']))\r\n    \r\n\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MentorProfileService } from '../mentor-profile.service';\r\nimport { Router } from '@angular/router';\r\nimport { Mentor } from '../models/mentor.model';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MentorProfileComponent } from '../mentor-profile/mentor-profile.component';\r\nimport { StudentProfileService } from '../student-profile.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n@Component({\r\n  selector: 'app-update-profile',\r\n  templateUrl: './update-profile.component.html',\r\n  styleUrls: ['./update-profile.component.css']\r\n})\r\nexport class UpdateProfileComponent implements OnInit {\r\n\r\n  mentor: Mentor = new Mentor();\r\n  updateForm: FormGroup;\r\n  hide = true;\r\n  breakpoint: number;\r\n  subjects: any[] = [ 'Physics', 'Maths', 'English', 'Java', 'Chemistry','Civics', 'Economics' , 'Python' , 'Biology','History' , 'Accounts' ,'Business Administration' , 'Geography', 'Political Science'];\r\n  time11: any[] = ['00:00', '1:00', '2:00', '3:00', '4:00', '5:00', '6:00', '7:00', '8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'];\r\n  constructor(private formBuilder: FormBuilder, private service1: StudentProfileService, private service: MentorProfileService, private router: Router, private dialogRef: MatDialogRef<MentorProfileComponent>,private  snackbar:MatSnackBar) { }\r\n  email1: String = this.service1.abc();\r\n\r\n  ngOnInit(): void {\r\n    this.service.getByEmail(this.email1).subscribe(data => this.mentor = data);\r\n    this.updateForm = this.formBuilder.group({\r\n      name: [this.mentor.name, [\r\n        Validators.required\r\n      ]],\r\n      email: [this.email1, [\r\n        Validators.required\r\n      ]],\r\n      phoneNumber: [this.mentor.phoneNumber, [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(10),\r\n        Validators.pattern(/^[0-9]\\d*$/)\r\n      ]],\r\n      subject: [this.mentor.subject, [\r\n        Validators.required,\r\n      ]],\r\n      qualification: [this.mentor.qualification,\r\n      [Validators.required,\r\n      ]],\r\n      startTime: [this.mentor.time, [Validators.required]],\r\n      endTime: [this.mentor.time, [Validators.required,]]\r\n    });\r\n    this.breakpoint = (window.innerWidth <= 600) ? 1 : 2;\r\n  }\r\n  OnUpdate() {\r\n    const mentor1: Mentor = {\r\n      id: this.updateForm.value.id,\r\n      name: this.updateForm.value.name,\r\n      phoneNumber: this.updateForm.value.phoneNumber,\r\n      email: this.updateForm.value.email,\r\n      qualification: this.updateForm.value.qualification,\r\n      subject: this.updateForm.value.subject,\r\n      status:this.updateForm.value.status,\r\n      joining_date:this.updateForm.value.joining_date,\r\n      comment:this.updateForm.value.comment,\r\n      sessions: this.updateForm.value.sessions,\r\n      time:[\r\n      {\r\n        \"startTime\": this.updateForm.value.startTime.split(':')[0],\r\n        \"endTime\": this.updateForm.value.endTime.split(':')[0]\r\n      }],\r\n      rating: this.updateForm.value.rating,\r\n      creditStore: this.updateForm.value.creditStore\r\n\r\n    };\r\n    console.log(this.updateForm.value);\r\n    this.service.updateMentor(mentor1).subscribe(data => {\r\n      this.mentor = data});\r\n      this.snackbar\r\n      // tslint:disable-next-line: max-line-length\r\n      .open((\"Your Profile is Updated\"), '', {\r\n        verticalPosition: 'top',\r\n        duration:2000\r\n       })\r\n       this.dialogRef.close();\r\n\r\n  }\r\n\r\n\r\n  onResize(event) {\r\n    this.breakpoint = (event.target.innerWidth <= 600) ? 1 : 2;\r\n  }\r\n  Onclose(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div id=\"close\" (click)=\"Onclose()\">\r\n    <h2>X</h2>\r\n</div>\r\n<mat-card>\r\n    <mat-card-title style=\"margin-left: 20px;\">\r\n\r\n        Update Profile\r\n\r\n    </mat-card-title>\r\n\r\n\r\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateForm.valid\" novalidate>\r\n        <mat-grid-list [cols]=\"2\" rowHeight=\"300px\">\r\n            <mat-grid-tile>\r\n                <div class=\"form-container\">\r\n                    <mat-form-field>\r\n                        <input id=\"email\" matInput disabled formControlName=\"email\" readonly=\"true\"\r\n                            placeholder=\"Enter your Email\" />\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input id=\"name\" matInput formControlName=\"name\" [(ngModel)]=\"mentor.name\"\r\n                            placeholder=\"Enter your name\" />\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input id=\"phoneNumber\" matInput formControlName=\"phoneNumber\" [(ngModel)]=\"mentor.phoneNumber\"\r\n                            placeholder=\"Enter your phoneNumber\" />\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <mat-label>Select subject</mat-label>\r\n                        <mat-select formControlName=\"subject\" [(ngModel)]=\"mentor.subject\" multiple>\r\n                            <mat-option *ngFor=\"let subject1 of subjects\" [value]=\"subject1\">\r\n                                {{subject1}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n            </mat-grid-tile>\r\n            <mat-grid-tile>\r\n                <div class=\"form-container\">\r\n                    <mat-form-field >\r\n                        <mat-label>I will be available from</mat-label>\r\n                        <mat-select formControlName=\"startTime\">\r\n                            <mat-option *ngFor=\"let times of time11\" [value]=\"times\">\r\n                                {{times}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <mat-label>I will be available upto</mat-label>\r\n                        <mat-select formControlName=\"endTime\">\r\n                            <mat-option *ngFor=\"let times1 of time11\" [value]=\"times1\">\r\n                                {{times1}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input id=\"class\" matInput formControlName=\"qualification\"\r\n                            placeholder=\"Enter your Qualification\" />\r\n                    </mat-form-field>\r\n                    <!-- <span class=\"bottomrow\" style=\"margin-left: 80px;\">\r\n                            <button mat-button type=\"submit\" class=\"mat-raised-button mat-primary\" (click)=\"OnUpdate()\"\r\n                                [disabled]=\"!updateForm.valid\">Update Profile</button>\r\n                        </span> -->\r\n                    <!-- <span class=\"bottomrow\" style=\"margin-left:200px ;\">\r\n                            <button mat-button type=\"close\" class=\"mat-raised-button mat-primary\" \r\n                                >close</button>\r\n                        </span> -->\r\n                </div>\r\n            </mat-grid-tile>\r\n        </mat-grid-list>\r\n    </form>\r\n    <span class=\"bottomrow\" style=\"margin-left: 650px;\">\r\n        <button mat-button type=\"submit\" class=\"mat-raised-button mat-primary\" (click)=\"OnUpdate()\"\r\n            [disabled]=\"!updateForm.valid\">Update Profile</button>\r\n    </span>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\n\r\ninterface Problem{\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n@Component({\r\n  selector: 'app-studentliveconnect',\r\n  templateUrl: './studentliveconnect.component.html',\r\n  styleUrls: ['./studentliveconnect.component.css']\r\n})\r\nexport class StudentliveconnectComponent implements OnInit {\r\n  problems: Problem[] = [\r\n    {value: '0', viewValue: 'Video issue'},\r\n    {value: '1', viewValue: 'Connection issue'},\r\n    {value: '2', viewValue: 'Mentor issue'}\r\n  ];\r\n  teachername=\"MentorName\";\r\n  noofdoubts=\"NoofDoubtsSolved\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n\r\n  <!-- Header with sergbo logo -->\r\n  <header>\r\n    <mat-toolbar color=\"primary\" class=\"navbar\">\r\n        <span routerLink=\"/\" >Nimbleguru</span>\r\n    </mat-toolbar>\r\n</header> <!-- Header section end here -->\r\n<body style=\"background: url(/assets/img/BG.png);\">\r\n\r\n  <mat-grid-list cols=\"12\" rowHeight=\"90%\" >\r\n    <mat-grid-tile colspan=\"2\">\r\n      <div class=\"example-button-row\">\r\n        <mat-icon id=\"accimg\">account_circle</mat-icon>\r\n\r\n        <br>\r\n        <button id=\"info\" mat-stroked-button color=\"primary\">{{teachername}}</button>\r\n\r\n         <br>\r\n\r\n         <button id=\"info\" mat-stroked-button color=\"primary\">{{noofdoubts}}</button>\r\n      </div>\r\n  </mat-grid-tile>\r\n    <mat-grid-tile colspan=\"8\">\r\n      <div class=\"video-player-wrapper\">\r\n      <vg-player>\r\n          <vg-overlay-play></vg-overlay-play>\r\n          <vg-buffering></vg-buffering>\r\n\r\n          <vg-scrub-bar>\r\n            <vg-scrub-bar-current-time></vg-scrub-bar-current-time>\r\n            <vg-scrub-bar-buffering-time></vg-scrub-bar-buffering-time>\r\n          </vg-scrub-bar>\r\n\r\n          <vg-controls>\r\n            <vg-play-pause></vg-play-pause>\r\n            <vg-playback-button></vg-playback-button>\r\n\r\n            <vg-time-display vgProperty=\"current\" vgFormat=\"mm:ss\"></vg-time-display>\r\n\r\n            <vg-scrub-bar style=\"pointer-events: none;\"></vg-scrub-bar>\r\n\r\n            <vg-time-display vgProperty=\"left\" vgFormat=\"mm:ss\"></vg-time-display>\r\n            <vg-time-display vgProperty=\"total\" vgFormat=\"mm:ss\"></vg-time-display>\r\n\r\n            <vg-track-selector></vg-track-selector>\r\n            <vg-mute></vg-mute>\r\n            <vg-volume></vg-volume>\r\n\r\n            <vg-fullscreen></vg-fullscreen>\r\n          </vg-controls>\r\n\r\n          <video [vgMedia]=\"media\" #media width ='800px'id=\"singleVideo\" preload=\"auto\" crossorigin>\r\n            <source src=\"http://static.videogular.com/assets/videos/videogular.mp4\" type=\"video/mp4\">\r\n            <source src=\"http://static.videogular.com/assets/videos/videogular.ogg\" type=\"video/ogg\">\r\n            <source src=\"http://static.videogular.com/assets/videos/videogular.webm\" type=\"video/webm\">\r\n\r\n            <track kind=\"subtitles\" label=\"English\" src=\"http://static.videogular.com/assets/subs/pale-blue-dot.vtt\"\r\n              srclang=\"en\" default>\r\n            <track kind=\"subtitles\" label=\"Español\" src=\"http://static.videogular.com/assets/subs/pale-blue-dot-es.vtt\"\r\n              srclang=\"es\">\r\n          </video>\r\n        </vg-player>\r\n        <section>\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"blue\">Record Session</button>\r\n            <button mat-raised-button color=\"accent\">Tools</button>\r\n            <button id=\"myButton\" mat-raised-button color=\"warn\" routerLink = \"/feedback\">End Call</button>\r\n          </div>\r\n        </section>\r\n       </div>\r\n   </mat-grid-tile>\r\n    <mat-grid-tile colspan=\"2\">\r\n        <div class=\"example-button-row\">\r\n          <button id=\"rep\" mat-raised-button color=\"primary\" routerLink = \"/feedback\">Report The Mentor</button>\r\n\r\n           <br>\r\n           <mat-form-field appearance=\"fill\">\r\n             <mat-label>Select Reason</mat-label>\r\n             <mat-select>\r\n               <mat-option *ngFor=\"let problem of problems\" [value]=\"problem.value\">\r\n                 {{problem.viewValue}}\r\n               </mat-option>\r\n             </mat-select>\r\n           </mat-form-field>\r\n\r\n        </div>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</body>\r\n  <footer>\r\n    <mat-grid-list cols=\"12\" rowHeight=\"1:1\">\r\n      <mat-grid-tile colspan=\"4\">\r\n        <ul>\r\n          <li>\r\n            About us\r\n          </li>\r\n          <li>\r\n            Contact us\r\n          </li>\r\n          <li>\r\n            Careers\r\n          </li>\r\n          <li>\r\n            Terms of use\r\n          </li>\r\n        </ul>\r\n      </mat-grid-tile>\r\n      <mat-grid-tile colspan=\"4\">\r\n        Address: Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam sed nihil perspiciatis accusamus\r\n        harum quis vero laudantium eaque voluptatum sit, explicabo tenetur voluptates iste ex qui id ducimus eligendi\r\n        optio!\r\n      </mat-grid-tile>\r\n      <mat-grid-tile colspan=\"4\">\r\n        <i style=\"margin: 5px;\" class=\"fa fa-facebook fa-2x\"></i>\r\n        <i style=\"margin: 5px;\" class=\"fa fa-instagram fa-2x\"></i>\r\n        <i style=\"margin: 5px;\" class=\"fa fa-twitter fa-2x\"></i>\r\n        <i style=\"margin: 5px;\" class=\"fa fa-google-plus fa-2x\"></i>\r\n        <i style=\"margin: 5px;\" class=\"fa fa-linkedin fa-2x\"></i>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n  </footer>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class PagerService {\r\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\r\n        // calculate total pages\r\n        let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        // ensure current page isn't out of range\r\n        if (currentPage < 1) { \r\n            currentPage = 1; \r\n        } else if (currentPage > totalPages) { \r\n            currentPage = totalPages; \r\n        }\r\n        \r\n        let startPage: number, endPage: number;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        let startIndex = (currentPage - 1) * pageSize;\r\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { LoginModel } from '../models/login.model';\r\nimport { FormGroup, FormBuilder, Validators, NgForm } from '@angular/forms'\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { StudentProfileService } from '../student-profile.service';\r\nimport { JwtClientService } from '../jwt-client.service';\r\nimport { Mentor } from '../models/mentor.model';\r\nimport { MentorProfileService } from '../mentor-profile.service';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { MentorProfileComponent } from '../mentor-profile/mentor-profile.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MentorRegistrationComponent } from '../mentor-registration/mentor-registration.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-log-in-page',\r\n  templateUrl: './log-in-page.component.html',\r\n  styleUrls: ['./log-in-page.component.css']\r\n})\r\nexport class LogInPageComponent implements OnInit {\r\n  user: LoginModel = new LoginModel();\r\n  loginForm: FormGroup;\r\n  hide = true;\r\n  breakpoint: number;\r\n  email: String = this.service.abc();\r\n  response: any;\r\n  authRequest: any;\r\n  token: any;\r\n  mentor: Mentor;\r\n  invalidLogin = false;\r\n  constructor( private snackbar: MatSnackBar,private dialog:MatDialog,private formBuilder: FormBuilder, private router: Router, private authentication: JwtClientService, private service: StudentProfileService, private authenticate: AuthenticationService, private Mservice: MentorProfileService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      'email': [this.user.email, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]],\r\n      'password': [this.user.password, [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30)\r\n      ]]\r\n    });\r\n    this.breakpoint = (window.innerWidth <= 600) ? 1 : 2;\r\n  }\r\n\r\n  Login() {\r\n    this.authRequest = {\r\n      'email': this.user.email,\r\n      'password': this.user.password\r\n    }\r\n    // this.getAccessToken(this.authRequest);\r\n    this.authenticate.authenticate(this.user.email, this.user.password).subscribe(\r\n      data => {\r\n        this.token = data.token\r\n        let roleService = this.token[1];\r\n        this.service.setRole(roleService);\r\n        let userEmail = this.token[0];\r\n        console.log(this.token);\r\n        this.service.emailService(userEmail);\r\n        console.log(this.token.size+\"sfad\"+this.token.length)\r\n        if(this.token.length == 3){\r\n        if (roleService == 'M') {\r\n          this.Mservice.getByEmail(userEmail).subscribe(data => {\r\n            this.mentor = data\r\n\r\n            console.log(this.mentor)\r\n            if (this.mentor == null) {\r\n              this.router.navigate(['mentor-registration'])\r\n            }\r\n            else {\r\n              this.router.navigate(['/mentor-profile']);\r\n            }\r\n          });\r\n\r\n\r\n        }\r\n        else {\r\n          this.router.navigate(['/home'])\r\n        }\r\n      }\r\n      else{\r\n        this.snackbar.open(('Username or password Incorrect'), 'Login again', {\r\n          duration: 3000,\r\n          verticalPosition: 'top',\r\n         })\r\n\r\n      }\r\n\r\n\r\n      },\r\n      // error => {\r\n      // //  this.invalidLogin = true\r\n\r\n      // }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  gotoregisteration() {\r\n    this.router.navigate([\"/student-registration\"])\r\n  }\r\n  onResize(event) {\r\n    this.breakpoint = (event.target.innerWidth <= 600) ? 1 : 2;\r\n  }\r\n\r\n\r\n  // public getAccessToken(authRequest) {\r\n  //   let resp = this.authentication.generateToken(authRequest);\r\n  //   resp.subscribe((data: any) => {\r\n  //     this.token = data.token\r\n\r\n  //     let roleService = this.token[1];\r\n  //     let userEmail = this.token[0];\r\n  //     this.service.emailService(userEmail);\r\n  //     this.service.setRole(roleService);\r\n  //     console.log(this.service.abc())\r\n  //     console.log(roleService)\r\n  //     if (roleService == 'M') {\r\n  //       this.Mservice.getByEmail(userEmail).subscribe(data => {\r\n  //         this.mentor = data\r\n  //         console.log(this.mentor)\r\n  //         if (this.mentor == null) {\r\n  //           this.router.navigate(['mentor-registration'])\r\n  //         }\r\n  //         else {\r\n  //           this.router.navigate(['/mentor-profile']);\r\n  //         }\r\n  //       });\r\n\r\n\r\n  //     }\r\n  //     else {\r\n  //       this.router.navigate(['/home'])\r\n  //     }\r\n\r\n\r\n  //   })\r\n\r\n  // }\r\n\r\n\r\n}\r\n","\r\n    \r\n<header>\r\n    \r\n    <mat-toolbar color=\"primary\" class=\"navbar\" >\r\n        <span routerLink=\"\" id=\"bar1\" style=\"width: 30%;\"><img src=\"/assets/img/header.png\"  width=\"50px\" height=\"50px\">Nimbleguru</span>\r\n\r\n        <!-- <span routerLink=\"\" id=\"bar1\" style=\"margin-left: 5px;\" class=\"video-player\" >     \r\n                <video [vgMedia]=\"media\" #media id=\"singleVideo\" width=\"60px\" height=\"55px\" preload=\"auto\"\r\n                crossorigin loop autoplay onmouseout=\"this.pause();\" >\r\n                 \r\n                      <source src=\"/assets/img/video.mp4\">\r\n                </video><span style=\"vertical-align: 25px;\">Nimbleguru</span>\r\n        </span> -->\r\n\r\n\r\n\r\n        <!-- <div class=\"video-player\">\r\n            <div>\r\n                <video [vgMedia]=\"media\" #media id=\"singleVideo\" preload=\"auto\"\r\n                 crossorigin loop onmouseover=\"this.play()\" onmouseout=\"this.pause();\" >\r\n                      <source src=\"/assets/img/logo1.mp4\">\r\n                </video>\r\n            </div>\r\n        </div> -->\r\n\r\n          <!-- <span routerLink=\"\">Nimbleguru</span> -->\r\n          <div>\r\n            <span><button routerLink=\"/student-registration\" mat-raised-button>Register</button></span>\r\n        </div>\r\n        <!-- <div class=\"wrapper\">\r\n            <video class=\"videoInsert\" preload=\"auto\"\r\n            crossorigin loop onmouseover=\"this.play()\" onmouseout=\"this.pause();\">\r\n            <source src=\"/assets/img/logo1.mp4\" type=\"video/mp4\">\r\n           </video>\r\n          </div> -->\r\n      \r\n    </mat-toolbar>\r\n</header>\r\n\r\n\r\n    <body>\r\n            <mat-grid-list [cols]=\"breakpoint\" rowHeight=\"1:1\" (window:resize)=\"onResize($event)\">\r\n    <mat-grid-tile>\r\n        <img alt=\"Logo\" src=\"/assets/img/LogoSerbo-Recovered copy.png \" style=\"width: 55%;\">\r\n        <!-- <div class=\"video-player-wrapper\">\r\n        <vg-player>\r\n            <div>\r\n                <video [vgMedia]=\"media\" #media width ='800px'id=\"singleVideo\" preload=\"auto\"\r\n                 crossorigin loop onmouseover=\"this.play()\" onmouseout=\"this.pause();\" >\r\n                      <source src=\"/assets/img/Logo video.mp4\">\r\n                </video>\r\n            </div>\r\n        </vg-player>\r\n        </div> -->\r\n                <!-- <div class=\"wrapper\">\r\n            <video class=\"videoInsert\" preload=\"auto\"\r\n            crossorigin loop onmouseover=\"this.play()\" onmouseout=\"this.pause();\">\r\n            <source src=\"/assets/img/Logo video.mp4 \" type=\"video/mp4\">\r\n           </video>\r\n          </div> -->\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile>\r\n\r\n        <mat-card style=\"width:330px;\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginForm.valid  &&  Login()\" novalidate>\r\n                <div class=\"form-container\">\r\n                    <mat-list>\r\n                        <mat-list-item > <h1 style=\"font-weight: 500;\">Log in</h1></mat-list-item>\r\n                        <mat-list-item role=\"listitem\">\r\n                            <mat-form-field style=\"width:300px;\">\r\n                                <input id=\"email\" matInput formControlName=\"email\" [(ngModel)]=\"user.email\"\r\n                                    placeholder=\"Enter your Email\" />\r\n                            </mat-form-field>\r\n                        </mat-list-item>\r\n                        <mat-list-item role=\"listitem\">\r\n\r\n                            <mat-form-field style=\"width:300px;\">\r\n                                <input id=\"password\" matInput formControlName=\"password\" [(ngModel)]=\"user.password\"\r\n                                    placeholder=\"Enter your password\" [type]=\"hide ? 'password': 'text'\" />\r\n                                <mat-icon matSuffix (click)=\"hide= !hide\">\r\n                                    {{hide ? 'visibility': 'visibility_off'}}\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </mat-list-item>\r\n                        <mat-list-item role=\"listitem\">\r\n\r\n                            <button  mat-button type=\"submit\" class=\"mat-raised-button mat-primary \"\r\n                             [disabled]=\"!loginForm.valid\">Login</button>\r\n                        </mat-list-item>\r\n                        <mat-list-item>\r\n                            <h3 (click)=\"gotoregisteration()\">New to Nimbleguru? Register <a routerLink=\"/student-registration\">here</a></h3>\r\n                        </mat-list-item>\r\n                    </mat-list>\r\n                </div>\r\n            </form>\r\n        </mat-card>\r\n\r\n    </mat-grid-tile>\r\n</mat-grid-list>\r\n    <!-- footer section start here -->\r\n    <footer style=\"color: white;\">\r\n        <div>Copyright © Sergbo All rights reserved.</div>\r\n        <div>\r\n            <a style=\"color: white;\" href=\"\">Privacy Statement  </a>\r\n            <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n        </div>\r\n    </footer> <!-- footer section end here -->\r\n</body>\r\n\r\n    <!-- <div class=\"video-player-wrapper\">\r\n        <vg-player>\r\n            <div>\r\n                <video [vgMedia]=\"media\" #media width ='800px'id=\"singleVideo\" preload=\"auto\"\r\n                 crossorigin loop onmouseover=\"this.play()\" onmouseout=\"this.pause();\" >\r\n                      <source src=\"/assets/img/Logo video.mp4\">\r\n                </video>\r\n            </div>\r\n        </vg-player>\r\n        </div> -->\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Session } from './models/session.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class SessionService{\r\n    constructor(private http: HttpClient) { }\r\n    findSession(session :any) : Observable<any>{\r\n        return this.http.post(`http://localhost:8080/mentor-platform-service/session/start`,session);\r\n      }\r\n      endSession(sessionId:any){\r\n       return this.http.post(`http://localhost:8080/mentor-platform-service/session/${sessionId}/end`,sessionId);\r\n      }\r\n      getMessageDetails(sessionId:any){\r\n        return this.http.get(`http://localhost:8080/mentor-platform-service/session/message/${sessionId}`)\r\n      }\r\n      getMentorEmail(teacherEmail:any,sessionStatus:any){\r\n        return this.http.get(`http://localhost:8080/mentor-platform-service/session/mentor/${teacherEmail}/${sessionStatus}`)\r\n      }\r\n      getSessionByEmail(email:any){\r\n        return this.http.get(`http://localhost:8080/mentor-platform-service/sessions/${email}`)\r\n      }\r\n      getSessionbyID(sessionId:any){\r\n        return this.http.get(`http://localhost:8080/mentor-platform-service/session/${sessionId}/feedback`)\r\n      }\r\n\r\n    }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginModel } from './models/login.model';\r\nimport { RegisterModel } from './models/register.model';\r\n\r\nconst url = 'http://localhost:8080/student-profile-service/students'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentProfileService {\r\n  email: String;\r\n  role:String;\r\n  subject: any;\r\n  constructor(private http: HttpClient, private router:Router) { }\r\n\r\n  public registerFromRemote(user: RegisterModel): Observable<any>{\r\n    //return this.http.post<any>('http://localhost:8086/registration', user);\r\n    return this.http.post<any>('http://localhost:8080/student-profile-service/registration', user);\r\n\r\n  }\r\n  public logInFromRemote(user: LoginModel): Observable<any>{\r\n    return this.http.post<any>('http://localhost:8080/student-profile-service/register', user);\r\n  }\r\n  getAll(): Observable<any>{\r\n    return this.http.get<any>(url);\r\n  }\r\n  getByEmail(email: String ): Observable<any>{\r\n    return this.http.get(`http://localhost:8080/student-profile-service/students/${email}`);\r\n  }\r\n  getuser(): Observable<any>{\r\n    return this.http.get('http://localhost:8080/student-profile-service/registration');\r\n  }\r\n  getBySubject(subject: String): Observable<any>{\r\n    return this.http.get(`http://localhost:8080/mentor-profile-service/mentors/${subject}`);\r\n  }\r\n  getFaqBySubject(subject:String): Observable<any>{\r\n    return this.http.get(`http://localhost:8080/mentor-platform-service/faq/${subject}`);\r\n  }\r\n  getSessionByEmail(email:String): Observable<any>{\r\n    return this.http.get(`http://localhost:8080/student-profile-service/sessions/${email}`);\r\n  }\r\n\r\n  emailService(email: any){\r\n    Cookie.set('email', email)\r\n    return this.email = email;\r\n  }\r\n  abc(){\r\n    return Cookie.get('email');\r\n  }\r\n  setRole(role:any){\r\n    Cookie.set('role' , role )\r\n    return this.role = role;\r\n  }\r\n  getRole(){\r\n    return Cookie.get('role');\r\n  }\r\n  // Logout(){\r\n  //   Cookie.deleteAll()\r\n  //   sessionStorage.clear();\r\n  //   this.router.navigate['/']\r\n  // }\r\n  setSubject(subject: any){\r\n    this.subject=subject;\r\n  }\r\n  getSubject(){\r\n    return this.subject;\r\n  }\r\n}\r\n","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { MentorProfileService } from '../mentor-profile.service';\r\nimport { Mentor } from '../models/mentor.model';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { StudentProfileService } from '../student-profile.service';\r\nimport { Session } from '../models/session.model';\r\nimport { SessionService } from '../session.service';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n\r\ninterface Problem {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n  // name= \"vishal.kapoor@svn\".split('@')[0]\r\n  constructor(private studentProfileService: StudentProfileService, private snackbar: MatSnackBar, private router: Router, private authenticate: AuthenticationService\r\n    ,         private mentorProfileService: MentorProfileService, private ss: SessionService, public dialog: MatDialog) { }\r\n  @ViewChild('menuTrigger') menuTrigger: MatMenuTrigger;\r\n\r\n  value = '';\r\n  str: String;\r\n  name = this.studentProfileService.abc().split('@')[0].toUpperCase();\r\n  // tslint:disable-next-line: ban-types\r\n  subject: String;\r\n  session: Session;\r\n  sessionId1: String;\r\n  avatar=this.name.charAt(0).toUpperCase();\r\n  // tslint:disable-next-line: variable-name\r\n  mentor_subject: Mentor;\r\n  problems: String[] = [ 'Physics', 'Maths', 'English', 'Java', 'Chemistry','Civics', 'Economics' , 'Python' , 'Biology','History' , 'Accounts' ,'Business Administration' , 'Geography', 'Political Science'];\r\n  update(value: string) { this.value = value; }\r\n  //   {value: '0', viewValue: 'Physics'},\r\n  //   {value: '1', viewValue: 'Chemistry'},\r\n  //   {value: '2', viewValue: 'Maths'},\r\n  //   {value: '3', viewValue: 'English'},\r\n  //   {value: '4', viewValue: 'Hindi'},\r\n  //   {value: '5', viewValue: 'Computer Science'},\r\n  //   {value: '6', viewValue: 'Social Studies'},\r\n\r\n  // ];\r\n  ngOnInit(): void {\r\n    // this.studentProfileService.setSubject(this.subject);\r\n\r\n  }\r\n  // tslint:disable-next-line: typedef\r\n\r\n\r\n  getBySubject() {\r\n    this.studentProfileService.getBySubject(this.subject).subscribe(data => {\r\n      this.mentor_subject = data,\r\n        console.log('hello' + data.email);\r\n      // this.mentorProfileService.setMentorEmail(data.email);\r\n      //  this.session.mentorName=data.email;\r\n      //   this.session.studentName=this.studentProfileService.abc();\r\n      const genertaeSession = {\r\n        studentEmail: this.studentProfileService.abc(),\r\n        teacherEmail: data.email,\r\n      };\r\n      console.log(genertaeSession);\r\n      this.ss.findSession(genertaeSession).subscribe(res => {\r\n          this.session = res;\r\n          this.session.subject = this.subject;\r\n          // this.session.query = document.getElementById(\"queryDoubt\").nodeValue;\r\n          this.session.query = this.str;\r\n          console.log('asdsad' + this.str);\r\n          // this.http.post<any>('http://localhost:8089/query',this.session);\r\n          this.mentorProfileService.setQuerySubject(this.session).subscribe(data => console.log(data));\r\n          console.log(this.session.query +'daasad'+ this.session.subject);\r\n          console.log(this.subject +'this is the data'+ this.session.sessionId);\r\n          const sess = this.session.sessionId;\r\n          this.sessionId1 = this.session.sessionId;\r\n          this.mentorProfileService.setSessionId(sess);\r\n          console.log('dhbvcjv'+ this.mentorProfileService.getSessionId());\r\n\r\n      });\r\n      this.snackbar\r\n        // tslint:disable-next-line: max-line-length\r\n        .open(('Rajesh Kapoor with degree in B.Tech has been assigned to you. Now you can proceed with your doubt'), 'Connect', {\r\n\r\n          verticalPosition: 'top'\r\n        })\r\n        .onAction()\r\n        .subscribe(() =>\r\n        this.router.navigate([`/chat`]))\r\n        //  console.log(\"dhbvcjv\"+this.mentorProfileService.getSessionId());\r\n\r\n        // .subscribe(() => this.router.navigate([`/chat`]))\r\n        ;\r\n      //  console.log(data.name.toString())\r\n    },\r\n    err => {\r\n      this.snackbar\r\n        // tslint:disable-next-line: max-line-length\r\n        .open(('This functionality will work with websockets!'), 'Connect', {\r\n\r\n          verticalPosition: 'top'\r\n        })\r\n        .onAction()\r\n        .subscribe(() =>\r\n        this.router.navigate([`/chat`]))}\r\n      // this.mentor_subject = data\r\n    );\r\n    // this.selectedsessionId=this.session.sessionId;\r\n    // console.log(this.session.sessionId);\r\n    // console.log(this.subject);\r\n  }\r\n\r\n  selectedSubject(event: MatSelectChange) {\r\n    console.log(event.value);\r\n    this.subject = event.value;\r\n    this.studentProfileService.setSubject(event.value);\r\n  }\r\n\r\n  // getNotification(){\r\n  //  this.mentorProfileService\r\n  // }\r\n  Logout() {\r\n    Cookie.deleteAll();\r\n    sessionStorage.clear();\r\n  }\r\n\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\" integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin=\"anonymous\">\r\n\r\n<!-- Header section start here -->\r\n<header>\r\n    <mat-toolbar color=\"primary\" class=\"navbar\">\r\n\r\n        <span routerLink=\"\" id=\"bar1\" style=\"width: 30%;\"><img src=\"/assets/img/header.png\" width=\"50px\"\r\n                height=\"50px\">Nimbleguru</span>\r\n                <span style=\"font-size: 70%;\">{{name}} \r\n                    <button mat-button [matMenuTriggerFor]=\"menu\" #menuTrigger id=\"abc\">\r\n                    <div\r\n                        style=\"width: 40px; height: 40px;background-color:#95DBEF ; border-radius: 20px; margin-right: 12px;\">\r\n            \r\n                        <div style=\"font-size: 17px; padding: 7px; padding-top: 3px; color: black;\">{{avatar}}</div>\r\n                    </div>\r\n                </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item id=\"Profile\" routerLink=\"/student-profile\">Profile</button>\r\n                <button mat-menu-item routerLink=\"/\" (click)=\"Logout()\">Logout</button>\r\n\r\n            </mat-menu>\r\n        </span>\r\n        <!-- <span style=\"float: right;margin-left: 78%;\">{{name}}</span><i class=\"fa fa-user-circle fa-2x\" routerLink=\"/student-profile\" id=\"circle\"></i>     -->\r\n        <!-- <button mat-raised-button color=\"accent\" routerLink=\"/login\" (click)=\"Logout()\">Logout</button> -->\r\n    </mat-toolbar>\r\n</header>\r\n<!-- Header section end here -->\r\n\r\n<!-- Maim section start here -->\r\n\r\n<body>\r\n\r\n    <mat-grid-list cols=1 rowHeight=\"90%\">\r\n        <mat-grid-tile>\r\n            <mat-card style=\"background-color:white ; padding: 5rem; \">\r\n                <div class=\"video-player-wrapper\">\r\n                    <header>\r\n                        <h1 style=\"font-weight:600;font-size: 300%; margin-bottom: 30px;\">Live Doubts</h1>\r\n                        <h4 style=\"font-size: 100%;\">Get Your Doubts Solved Instantly</h4>\r\n                    </header>\r\n                    <section>\r\n\r\n                        <div class=\"example-button-row\">\r\n                            <mat-form-field appearance=\"outline\" >\r\n                                <mat-label style=\"width: 600px;\">Select Subject</mat-label>\r\n                                <mat-select (selectionChange)=\"selectedSubject($event)\">\r\n                                    <mat-option *ngFor=\"let problem of problems\" [value]=\"problem\">\r\n                                        {{problem}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <br>\r\n\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 500px;\">\r\n\r\n                                <textarea [(ngModel)]=\"str\" id=\"str\" matInput rows=\"5\" cols=\"1000000\" placeholder=\"Enter your Doubts\" #doubts></textarea>\r\n                            </mat-form-field>\r\n\r\n\r\n                            <button class=\"bottomrow\" mat-raised-button color=\"primary\" style=\"margin-left: 16px\" (click)=\"getBySubject()\" [disabled]=\"doubts.value.length===0\">Submit</button>\r\n                        </div>\r\n\r\n                        <!-- <br>\r\n                    <button mat-raised-button color=\"primary\" style=\"margin-right: 16px\" [disabled]=\"doubts.value.length===0\">Schedule a mentor</button>\r\n                    <button mat-raised-button color=\"primary\" routerLink=\"/dummychat\"  [disabled]=\"doubts.value.length===0\">Connect With A Mentor</button> -->\r\n                    </section>\r\n                </div>\r\n            </mat-card>\r\n        </mat-grid-tile>\r\n\r\n\r\n\r\n    </mat-grid-list>\r\n\r\n\r\n<!-- footer section start here -->\r\n<footer style=\"color: white;\">\r\n    <div>Copyright © Sergbo All rights reserved.</div>\r\n    <div>\r\n        <a style=\"color: white;\" href=\"\">Privacy Statement </a>\r\n        <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n    </div>\r\n</footer>\r\n<!-- footer section end here -->\r\n<!-- <app-faq-by-subject [parentData]=\"subject\"></app-faq-by-subject> -->\r\n</body>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {Mentor } from './models/mentor.model'\r\nimport { FAQ } from './models/faq.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport { Session } from './models/session.model';\r\n\r\n\r\nconst url = 'http://localhost:8080/mentor-profile-service/mentor'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MentorProfileService {\r\n  mentorEmail:any;\r\n  sessionId:any;\r\n  constructor(private http : HttpClient,public snackBar : MatSnackBar) { }\r\n  public registerFromRemote(user:Mentor):Observable<any>{\r\n    return this.http.post<any>(\"http://localhost:8080/mentor-profile-service/register\",Mentor);\r\n  }\r\n  getAll() :Observable<any>{\r\n    return this.http.get<any>(url);\r\n  }\r\n  getByEmail(email :String ) : Observable<any>{\r\n    return this.http.get(`http://localhost:8080/mentor-profile-service/mentor/${email}`);\r\n  }\r\n  getSessionByEmail(email :String ) : Observable<any>{\r\n    return this.http.get(`http://localhost:8080/mentor-profile-service/sessions/${email}`);\r\n  }\r\n  updateMentor(mentor : Mentor) : Observable<any>\r\n  {\r\n    return this.http.put(\"http://localhost:8080/mentor-profile-service/updateProfile\",mentor);\r\n  }\r\n  saveFaq(faq : FAQ) : Observable<any>\r\n  {\r\n    return this.http.post<any>(\"http://localhost:8080/mentor-platform-service/register\",faq);\r\n  }\r\n  saveMentor(mentor1 : Mentor) : Observable<any>\r\n  {\r\n    return this.http.post(\"http://localhost:8080/mentor-profile-service/register\",mentor1);\r\n  }\r\n  setQuerySubject(session: Session): Observable<any>{\r\n    return this.http.post(\"http://localhost:8080/mentor-platform-service/query\",session);\r\n  }\r\n  sucess(msg)\r\n  {\r\n    this.snackBar.open(msg,'');\r\n  }\r\n  setMentorEmail(mentorEmail:any){\r\n    Cookie.set('mentorEmail' , mentorEmail )\r\n    return this.mentorEmail =mentorEmail;\r\n  }\r\n  getMentorEmail(){\r\n    return Cookie.get('mentorEmail');\r\n  }\r\n  setSessionId(sessionId:any){\r\n    Cookie.set('sessionId', sessionId)\r\n    return this.sessionId=sessionId;\r\n  }\r\n  getSessionId(){\r\n    return Cookie.get('sessionId')\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'nimbleguru-ui';\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\"\r\n    integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin=\"anonymous\">\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { Session } from 'inspector';\r\nimport { data } from 'jquery';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport { MentorProfileService } from '../mentor-profile.service';\r\nimport { MessageModel } from '../models/message.model';\r\nimport { RegisterModel } from '../models/register.model';\r\nimport { SessionService } from '../session.service';\r\nimport { StudentProfileService } from '../student-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-history',\r\n  templateUrl: './chat-history.component.html',\r\n  styleUrls: ['./chat-history.component.css']\r\n})\r\n\r\nexport class ChatHistoryComponent implements OnInit {\r\n  message1: MessageModel = new MessageModel();\r\n  email1: String = this.service.abc();\r\n  name = this.service.abc().split('@')[0].toUpperCase();\r\n\r\n  // user: RegisterModel;\r\n  sessionId:any;\r\n  avatar=this.name.charAt(0).toUpperCase();\r\n\r\n\r\n  messageHistory:MessageModel[];\r\n  constructor(private _route:ActivatedRoute ,private service: StudentProfileService,private sessionService: SessionService, private router:Router ) {\r\n    this._route.params.subscribe(params => {\r\n      console.log(\"params\" , params[\"sessionId\"])\r\n      this.sessionId = params[\"sessionId\"];\r\n    })\r\n  \r\n  \r\n  \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.service.getByEmail(this.email1).subscribe(data => this.user = data);\r\n    // console.log(this.user.sessions[5]);\r\n    this.sessionService.getMessageDetails(this.sessionId).subscribe(data=>\r\n      this.messageHistory = data[\"sessionChatMessages\"]);\r\n      console.log(data)\r\n  }\r\n\r\n  Logout(){\r\n    Cookie.deleteAll()\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  onProfile(){\r\n    if(this.service.getRole()=='M'){\r\n      this.router.navigate(['/mentor-profile'])\r\n    }\r\n    else{\r\n      this.router.navigate(['/student-profile'])\r\n    }\r\n  }\r\n\r\n }\r\n","<header>\r\n    <mat-toolbar color=\"primary\" class=\"navbar\">\r\n\r\n        <span routerLink=\"\" id=\"bar1\" style=\"margin-left: 5px;\"><img src=\"/assets/img/header.png\" width=\"60px\"\r\n              height=\"60px\">Nimbleguru</span>\r\n              <span style=\"font-size: 70%;\">{{name}} \r\n                <button mat-button [matMenuTriggerFor]=\"menu\" #menuTrigger id=\"abc\">\r\n                <div\r\n                    style=\"width: 40px; height: 40px;background-color:#95DBEF ; border-radius: 20px; margin-right: 12px;\">\r\n        \r\n                    <div style=\"font-size: 17px; padding: 7px; padding-top: 3px; color: black;\">{{avatar}}</div>\r\n                </div>\r\n            </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n              <button mat-menu-item (click) = \"onProfile()\">Profile</button>\r\n              <button mat-menu-item routerLink=\"/\" (click)=\"Logout()\">Logout</button>\r\n\r\n          </mat-menu>\r\n      </span>\r\n        <!-- <span style=\"float: right;margin-left: 78%;\">{{name}}</span><i class=\"fa fa-user-circle fa-2x\" routerLink=\"/student-profile\" id=\"circle\"></i>     -->\r\n        <!-- <button mat-raised-button color=\"accent\" routerLink=\"/login\" (click)=\"Logout()\">Logout</button> -->\r\n    </mat-toolbar>\r\n</header>\r\n\r\n<body>\r\n\r\n    <div style=\"text-align:center\">\r\n        <h1>\r\n        Conversations\r\n        </h1>\r\n        <div class=\"chat-container\">\r\n            <div class=\"chat\" style=\"background-color: white ;\">\r\n                <div class=\"message\" *ngFor=\"let message of messageHistory\">\r\n                    <!-- <div  class=\"message\" > -->\r\n                    <span style=\"background-color:white;color:black;padding:5px;font-size:14px; font-weight:600\">{{message.userName}}</span>\r\n                    <span style=\"background-color:white;color:grey;padding:5px;font-size:14px\">{{message.timeStamp}}</span>\r\n                    <div style=\"background-color:white;color:black;padding:5px;font-size:18px; padding-left:5px\">{{message. messageContent}}</div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- <div  style=\" padding: 85px 0px 0px 0px;\">\r\n    <div class=\"send-button\">\r\n  \r\n  \r\n      <!-- <input  id=\"input\" placeHolder=\"type message\" type=\"text\" #input>\r\n      <button mat-raised-button color=\"primary\" (click)=\"sendMessage(input.value)\">Send\r\n      </button> -->\r\n\r\n    <!-- </div> -->\r\n\r\n    <!-- </div> -->\r\n    <!-- <button id=\"myButton\" mat-raised-button color=\"warn\" (click) = \"onClick()\">End Chat</button> -->\r\n\r\n\r\n    <!-- </div> -->\r\n</body>\r\n<!-- footer section start here -->\r\n<footer style=\"color: white;\">\r\n    <div>Copyright © Sergbo All rights reserved.</div>\r\n    <div>\r\n        <a style=\"color: white;\" href=\"\">Privacy Statement  </a>\r\n        <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n    </div>\r\n</footer>\r\n<!-- footer section end here -->","import { CompileShallowModuleMetadata } from '@angular/compiler';\r\nimport { Component, OnInit,OnDestroy, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { LogInPageComponent } from '../log-in-page/log-in-page.component';\r\nimport { LoginModel } from '../models/login.model';\r\nimport { RegisterModel } from '../models/register.model';\r\nimport { StudentProfileService } from '../student-profile.service';\r\nimport {Mentor} from '../models/mentor.model';\r\nimport { SessionService } from '../session.service';\r\nimport {Session} from '../models/session.model';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport { MatTableDataSource} from '@angular/material/table';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Cookie } from 'ng2-cookies';\r\n\r\n\r\nexport interface Card {\r\n  title: string;\r\n  subtitle: string;\r\n  text: string\r\n}\r\n\r\nconst DATA: Card[] = [\r\n  {\r\n    title: 'Shiba Inu 1',\r\n    subtitle: 'Dog Breed',\r\n    text: 'The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.'\r\n  },\r\n  {\r\n    title: 'Shiba Inu 2',\r\n    subtitle: 'Dog Breed',\r\n    text: 'The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.'\r\n  }\r\n];\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-student-profile',\r\n  templateUrl: './student-profile.component.html',\r\n  styleUrls: ['./student-profile.component.css'] \r\n})\r\n\r\nexport class StudentProfileComponent implements OnInit ,OnDestroy{\r\n  name = this.studentProfileService.abc().split('@')[0].toUpperCase();\r\n\r\n  sessionArray: Session[];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  obs: Observable<any>;\r\n  dataSource: MatTableDataSource<Session>;\r\n  user: RegisterModel;\r\n  avatar=this.name.charAt(0).toUpperCase();\r\n\r\n\r\n  breakpoint:number;\r\n  constructor(private http: HttpClient,private changeDetectorRef: ChangeDetectorRef,private studentProfileService:StudentProfileService,private authenticate: AuthenticationService,private SessionService:SessionService) {\r\n    this.studentProfileService.getSessionByEmail(this.email).subscribe(x => {this.sessionArray = x;\r\n    // dataSource: MatTableDataSource<Session> = new MatTableDataSource<Session>(this.sessionArray);\r\n    \r\n    this.dataSource = new MatTableDataSource<Session>(this.sessionArray);\r\n    console.log(this.sessionArray);\r\n    console.log(this.dataSource);\r\n    this.changeDetectorRef.detectChanges();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.obs = this.dataSource.connect();\r\n  });\r\n    \r\n  // dataSource2: MatTableDataSource<Session> = new MatTableDataSource<Session>(this.sessionArray);\r\n    // this.SessionService.getSessionByEmail(this.email).subscribe((res: Response) => {\r\n    //   this.sessionArray = res.json();\r\n    // console.log(this.sessionArray);\r\n    // this.dataSource = new MatTableDataSource<Session>(this.sessionArray);\r\n    // console.log(this.sessionArray); });\r\n  \r\n    // this.dataSource = new MatTableDataSource<Session>(this.sessionArray);\r\n}\r\n  email:String = this.studentProfileService.abc();\r\n  session:String = \"Geometry\";\r\n  date:String = \"31/12/2020 12:00 AM\";\r\n  \r\n\r\n\r\n  ngOnInit() {\r\n    this.breakpoint = (window.innerWidth <= 600) ? 1 : 2;\r\n\r\n    // this.sessionStr = {sessionId:1,sessionDate:\"31/12/2020\",studentName:\"Ayush\",mentorName:\"simanta\",query:\"Algebra funxtions\",querySolutin:\"link for materials\",message:\"refer the link\",rating:4,startTime:3,endTime:5};\r\n    this.studentProfileService.getByEmail(this.email).subscribe(data => this.user = data);\r\n    console.log(this.sessionArray);\r\n    \r\n\r\n\r\n\r\n    // this.changeDetectorRef.detectChanges();\r\n    // this.dataSource.paginator = this.paginator;\r\n    // this.obs = this.dataSource.connect();\r\n\r\n    // this.studentProfileService.getBySubject(this.subject).subscribe(data=> this.mentor123 = data);\r\n    // console.log(this.subject);\r\n  }\r\n  ngOnDestroy() {\r\n    if (this.dataSource) { \r\n      this.dataSource.disconnect(); \r\n    }\r\n  }\r\n  \r\n  onResize(event) {\r\n    this.breakpoint = (event.target.innerWidth <= 600) ? 1 : 2;\r\n  }\r\n\r\n  // getHistory(){\r\n  //   this.\r\n  // }\r\n  Logout(){\r\n    Cookie.deleteAll()\r\n    sessionStorage.clear();\r\n  }\r\n}\r\n","<!-- <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"> -->\r\n\r\n<!-- Header with sergbo logo -->\r\n<header>\r\n    <mat-toolbar color=\"primary\" class=\"navbar\">\r\n\r\n        <span routerLink=\"/\" id=\"bar1\" style=\"margin-left: 5px;\"><img src=\"/assets/img/header.png\" width=\"60px\"\r\n                height=\"60px\">Nimbleguru</span>\r\n        <span style=\"font-size: 70%;\">{{name}}\r\n            <button mat-button [matMenuTriggerFor]=\"menu\" #menuTrigger id='abc'>\r\n                <div\r\n                    style=\"width: 40px; height: 40px;background-color:#95DBEF ; border-radius: 20px; margin-right: 12px;\">\r\n\r\n                    <div style=\"font-size: 17px; padding: 7px; padding-top: 3px; color: black;\">{{avatar}}</div>\r\n                </div>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item routerLink=\"/student-profile\">Profile</button>\r\n                <button mat-menu-item routerLink=\"/\" (click)=\"Logout()\">Logout</button>\r\n\r\n            </mat-menu>\r\n        </span>\r\n        <!-- <span style=\"float: right;margin-left: 78%;\">{{name}}</span><i class=\"fa fa-user-circle fa-2x\" routerLink=\"/student-profile\" id=\"circle\"></i>     -->\r\n        <!-- <button mat-raised-button color=\"accent\" routerLink=\"/login\" (click)=\"Logout()\">Logout</button> -->\r\n    </mat-toolbar>\r\n</header>\r\n\r\n<body>\r\n\r\n    <mat-grid-list cols=4 rowHeight=\"100%\">\r\n        <mat-grid-tile colspan=1>\r\n            <mat-grid-tile-header style=\"background-color: black;\">My Profile</mat-grid-tile-header>\r\n            <mat-list role=\"list\">\r\n                <mat-list-item role=\"listitem\">\r\n                    <div\r\n                        style=\"width: 100px; height: 100px;background-color:#95DBEF ; border-radius: 50px;margin-bottom: 30px; margin-left: 50px;\">\r\n\r\n                        <div style=\"font-size: 60px; padding: 30px; padding-top: 3px; color: black;\">{{avatar}}</div>\r\n                    </div>\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\">\r\n                    <mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\">\r\n                    40 Minutes left\r\n                </mat-list-item>\r\n                <!-- <div *ngFor = \"let student of students\">\r\n          <div *ngIf = \"student.name === 'vishal' \"> -->\r\n                <mat-list-item role=\"listitem\">\r\n                    <h2><strong>Name :</strong> Vishal Kapoor </h2>\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\">\r\n                    <h2><strong>Email :</strong> vishalkapoorbkn@gmail.com </h2>\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\">\r\n                    <h2><strong>Class :</strong> Higher Secondary</h2>\r\n                </mat-list-item>\r\n                <!-- </div>\r\n      </div> -->\r\n                <mat-list-item role=\"listitem\" style=\"height: auto; margin-left: 12.5%;\">\r\n                    <button routerLink=\"/home\" mat-raised-button color=\"primary\">Connect with a mentor now!</button>\r\n                </mat-list-item>\r\n\r\n            </mat-list>\r\n        </mat-grid-tile>\r\n\r\n        <!-- <mat-grid-tile colspan=\"9\">\r\n            <mat-grid-tile-header style=\"background-color: black;\">My Connect</mat-grid-tile-header>\r\n            <mat-list role=\"list\" id=\"list1\">\r\n                <mat-list-item role=\"listitem\" style=\"height: auto; margin-left: 37.5%;\">\r\n                    <h2>Your previous connects</h2>\r\n                </mat-list-item>\r\n                <div *ngFor = \"let session of mentor?.sessions\"> -->\r\n        <!-- <div>\r\n                    <mat-list-item role=\"listitem\" style=\"height: auto;\">\r\n                        <mat-card>{{session}}<button style=\"float: right;\" mat-button><i class=\"fa fa-play-circle fa-3x\"routerLink=\"/history\"></i></button>\r\n                            <div mat-line>{{date}}</div>\r\n                        </mat-card> -->\r\n\r\n        <mat-grid-tile colspan=3>\r\n            <mat-grid-tile-header style=\"background-color: black;\">My Previous Connects</mat-grid-tile-header>\r\n            <mat-list role=\"list\" id=\"list1\">\r\n                <mat-list-item role=\"listitem\" style=\"height: auto; margin-left: 37.5%;\">\r\n                </mat-list-item>\r\n                <!-- <div *ngFor = \"let session of mentor?.sessions\"> -->\r\n                <div *ngIf=\"sessionArray!=null; then thenBlock else elseBlock\"></div>\r\n                <ng-template #thenBlock>\r\n                    <div class=\"scrollable\">\r\n                        <mat-card class=\"example-session\" *ngFor=\"let session of obs | async\">\r\n                            <mat-card-header>\r\n                                <div mat-card-avatar class=\"example-header-image\"></div>\r\n                                <mat-card-title>{{session.query.charAt(0).toUpperCase() + session.query.substr(1)}}\r\n                                </mat-card-title>\r\n                                <mat-card-subtitle>Subject:&nbsp;{{session.subject}} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                    &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n                                    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                    MentorEmail:&nbsp;{{session.teacherEmail}}</mat-card-subtitle>\r\n                            </mat-card-header>\r\n                            <mat-card-content>\r\n                                <span>\r\n                                    <button style=\"float: right; margin-bottom: 100px;\" mat-button><i\r\n                                            class=\"fa fa-play-circle fa-3x\"\r\n                                            [routerLink]=\"['/history', session.sessionId]\"></i></button>\r\n                                </span>\r\n                                <span>\r\n                                    <!-- <p>Subject:{{session.subject}} MentorEmail:{{session.teacherEmail}}</p> -->\r\n                                    <p>Duration:&nbsp;{{session.duration}} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Taken\r\n                                        on:&nbsp;{{session.startTime | date:'dd MMM, yyyy'}}</p>\r\n                                </span>\r\n                            </mat-card-content>\r\n                        </mat-card>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[3, 10, 25, 100]\"></mat-paginator>\r\n                    </div>\r\n                </ng-template>\r\n                <ng-template #elseBlock ><div style=\"font-size: 26px; font-weight: 600;\">\r\n                    You haven't attended any session yet!!</div><div style=\"font-size: 26px;\"> Please connect with mentors instantly and get your doubts cleared.</div></ng-template>\r\n\r\n            </mat-list>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n\r\n    <!-- footer section start here -->\r\n    <footer style=\"color: white;\">\r\n        <div>Copyright © Sergbo All rights reserved.</div>\r\n        <div>\r\n            <a style=\"color: white;\" href=\"\">Privacy Statement </a>\r\n            <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n        </div>\r\n    </footer>\r\n</body>","import { Session } from './session.model';\r\nimport { timeslot } from './time.model';\r\nexport class Mentor\r\n{\r\n    // tslint:disable-next-line: ban-types\r\n    id?: number;\r\n    name: String;\r\n    phoneNumber: String;\r\n    email: String;\r\n    qualification: String;\r\n    subject: String[];\r\n    time: timeslot[];\r\n    sessions: Session[];\r\n    creditStore? : any;\r\n    rating : any;\r\n    status:String;\r\n    joining_date:String;\r\n    comment:String;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { InjectionToken, NgModule } from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LandingPageComponent } from './landing-page/landing-page.component';\r\nimport { RegisterationPageComponent } from './registeration-page/registeration-page.component';\r\nimport { LogInPageComponent } from './log-in-page/log-in-page.component';\r\nimport { StudentProfileComponent } from './student-profile/student-profile.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { MatCard, MatCardModule} from '@angular/material/card';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatFormField, MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MentorProfileComponent } from './mentor-profile/mentor-profile.component';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { StudentliveconnectComponent } from './studentliveconnect/studentliveconnect.component';\r\nimport {VgCoreModule} from '@videogular/ngx-videogular/core';\r\nimport {VgControlsModule} from '@videogular/ngx-videogular/controls';\r\nimport {VgOverlayPlayModule} from '@videogular/ngx-videogular/overlay-play';\r\nimport {VgBufferingModule} from '@videogular/ngx-videogular/buffering';\r\nimport { StudentProfileService } from './student-profile.service';\r\nimport {MatSlider, MatSliderModule} from '@angular/material/slider';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\nimport { DatePipe } from '@angular/common'\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {AuthenticationService} from './services/authentication.service';\r\n// import {BasicAuthHtppInterceptorService} from './services/BasicAuthHtppInterceptorService';\r\nimport { FeedbackComponent } from './feedback/feedback.component';\r\nimport { FeedbackService } from './feedback.service';\r\nimport { UpdateProfileComponent } from './update-profile/update-profile.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { ChatApplicationComponent } from './chat-application/chat-application.component';\r\nimport { FaqComponent } from './faq/faq.component';\r\nimport { MentorProfileService } from './mentor-profile.service';\r\nimport { JwtClientService } from './jwt-client.service';\r\nimport { MentorRegistrationComponent } from './mentor-registration/mentor-registration.component';\r\nimport { ChatHistoryComponent } from './chat-history/chat-history.component';\r\n//import { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {PagerService} from './PagerService';\r\n\r\nimport { MatMenuModule} from '@angular/material/menu';\r\nimport { FaqBySubjectComponent } from './faq-by-subject/faq-by-subject.component';\r\nimport { AuthService } from './auth.service';\r\nimport { AuthGuardService } from './auth-guard.service';\r\nimport { JwtHelperService, JWT_OPTIONS, JwtModule } from '@auth0/angular-jwt';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingPageComponent,\r\n    RegisterationPageComponent,\r\n    LogInPageComponent,\r\n    StudentProfileComponent,\r\n    PageNotFoundComponent,\r\n    MentorProfileComponent,\r\n    HomepageComponent,\r\n    StudentliveconnectComponent,\r\n    FeedbackComponent,\r\n    UpdateProfileComponent,\r\n    ChatApplicationComponent,\r\n    FaqComponent,\r\n    MentorRegistrationComponent,\r\n    ChatHistoryComponent,\r\n    FaqBySubjectComponent,\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatProgressBarModule,\r\n    MatGridListModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatToolbarModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    MatSliderModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    HttpClientModule,\r\n    VgCoreModule,\r\n    VgControlsModule,\r\n    VgOverlayPlayModule,\r\n    VgBufferingModule,\r\n    MatSnackBarModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatMenuModule,\r\n    JwtModule\r\n\r\n\r\n  ],\r\n  // providers: [ PagerService,JwtClientService ,StudentProfileService, MentorProfileService ,FeedbackService,DatePipe,AuthenticationService,BasicAuthHtppInterceptorService,{ provide: HTTP_INTERCEPTORS, useClass: BasicAuthHtppInterceptorService, multi: true }],\r\n  providers: [{ provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\r\n    JwtHelperService,AuthService,AuthGuardService, PagerService,JwtClientService ,StudentProfileService, MentorProfileService ,FeedbackService,DatePipe,AuthenticationService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RegisterModel } from '../models/register.model';\r\nimport { FormBuilder, FormControl, FormGroup, PatternValidator, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { StudentProfileService } from '../student-profile.service';\r\nimport { MatSnackBar, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\nimport { Cookie } from 'ng2-cookies';\r\n\r\n\r\n@Component({\r\n  selector: 'app-registeration-page',\r\n  templateUrl: './registeration-page.component.html',\r\n  styleUrls: ['./registeration-page.component.css']\r\n})\r\nexport class RegisterationPageComponent implements OnInit {\r\n  user: RegisterModel = new RegisterModel();\r\n  registerForm: FormGroup;\r\n  hide = true;\r\n  breakpoint: number;\r\n  password1: any;\r\n  userName:any;\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private service: StudentProfileService , private snackbar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      name: [this.user.name, [\r\n        Validators.required,\r\n        Validators.pattern(/^[a-zA-Z]+ [a-zA-Z]+$/)\r\n      ]],\r\n      phoneNumber: [this.user.phoneNumber, [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(10),\r\n        Validators.pattern('^[0-9]*$')\r\n      ]],\r\n      email: [this.user.email, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]],\r\n      standard: [this.user.standard, [\r\n        Validators.required,\r\n        Validators.pattern('^[0-9]*$'),\r\n        Validators.minLength(1),\r\n        Validators.maxLength(2)\r\n      ]],\r\n      password: [this.user.password, [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n      ]],\r\n      confirmPassword: [this.user.confirmPassword, [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n        Validators.maxLength(30),\r\n        ]]\r\n    });\r\n    this.breakpoint = (window.innerWidth <= 600) ? 1 : 2;\r\n    // this.breakpoint = (window.innerWidth <= 100) ? 2 : 3;\r\n\r\n\r\n  }\r\n  // tslint:disable-next-line: typedef\r\n  onRegisterSubmit() {\r\n    if (this.check() == true){\r\n      this.service.registerFromRemote(this.user).subscribe(\r\n        data => {\r\n          // console.log('response recived');\r\n          this.router.navigate(['/login']);\r\n        }, err =>{\r\n          this.snackbar.open(('User with this emailID already exists. Kindly register with different emailID.'), '', {\r\n            duration: 5000,\r\n            verticalPosition: 'top'\r\n           });\r\n          //  console.clear();\r\n\r\n          // console.log(\"bad credentials\");\r\n        }\r\n      );\r\n    }\r\n    else{\r\n      this.snackbar.open(('Your passwords aren\\'t matching! Please check your password fields'), '', {\r\n        duration: 10000,\r\n        verticalPosition: 'top'\r\n       });\r\n\r\n    }\r\n    // console.clear();\r\n\r\n\r\n  }\r\n  gotologin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n  onResize(event) {\r\n    this.breakpoint = (event.target.innerWidth <= 600) ? 1 : 2;\r\n  }\r\n  check(){\r\n    if (this.user.confirmPassword == this.user.password){\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<header>\r\n    <mat-toolbar color=\"primary\" class=\"navbar\">\r\n        <!-- <span routerLink=\"\">Nimbleguru</span> -->\r\n\r\n\r\n        <span routerLink=\"\" id=\"bar1\" style=\"width: 30%;\"><img src=\"/assets/img/header.png\"  width=\"50px\" height=\"50px\">Nimbleguru</span>\r\n\r\n        <!-- <span routerLink=\"\" id=\"bar1\" style=\"margin-left: 5px;\" class=\"video-player\" >     \r\n                <video [vgMedia]=\"media\" #media id=\"singleVideo\" width=\"60px\" height=\"55px\" preload=\"auto\"\r\n                crossorigin loop autoplay onmouseout=\"this.pause();\" >\r\n\r\n                 \r\n                      <source src=\"/assets/img/video.mp4\">\r\n                </video><span style=\"vertical-align: 25px;\">Nimbleguru</span>\r\n        </span> -->\r\n\r\n\r\n        <div>\r\n            <span><button routerLink=\"/login\" mat-raised-button>Login</button></span>\r\n            \r\n        </div>\r\n    </mat-toolbar>\r\n</header>\r\n<body>\r\n\r\n<mat-grid-list [cols]=\"breakpoint\" rowHeight=\"1:1\" (window:resize)=\"onResize($event)\" >\r\n    <mat-grid-tile>\r\n        <img alt=\"Logo\" src=\"/assets/img/LogoSerbo-Recovered copy.png\" style=\"width: 55%;\">\r\n    </mat-grid-tile>\r\n\r\n\r\n    <mat-grid-tile>\r\n        <mat-card style=\"width:350px; padding:0px ;\">\r\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerForm.valid && onRegisterSubmit()\" novalidate>\r\n                <div class=\"form-container\">\r\n                    <mat-list>\r\n                        <mat-list-item >\r\n                            <h1 style=\"font-weight: 500;\">Registration</h1>\r\n                        </mat-list-item>\r\n                        <mat-list-item role=\"listitem\" >\r\n                            <mat-form-field style=\"width:300px;\">\r\n                                <input id=\"name\" matInput formControlName=\"name\" [(ngModel)]=\"user.name\"\r\n                                    placeholder=\"Enter your name\" />\r\n                            </mat-form-field>\r\n                        </mat-list-item>\r\n                        <mat-list-item role=\"listitem\" >\r\n                            <mat-form-field style=\"width:300px;\">\r\n                                <input id=\"phoneNumber\" matInput formControlName=\"phoneNumber\"\r\n                                    [(ngModel)]=\"user.phoneNumber\" placeholder=\"Enter your phoneNumber\" />\r\n                            </mat-form-field>\r\n                        </mat-list-item>\r\n                        <mat-list-item role=\"listitem\" >\r\n\r\n                            <mat-form-field style=\"width:300px;\">\r\n                                <input id=\"email\" matInput formControlName=\"email\"\r\n                                    [(ngModel)]=\"user.email\" placeholder=\"Enter your email\" />\r\n                            </mat-form-field>\r\n                        </mat-list-item>\r\n                        <mat-list-item role=\"listitem\" >\r\n\r\n                            <mat-form-field style=\"width:300px;\">\r\n                                <input id=\"class\" matInput formControlName=\"standard\" [(ngModel)]=\"user.standard\"\r\n                                    placeholder=\"Enter your standard\" />\r\n                            </mat-form-field>\r\n                        </mat-list-item>\r\n                        <mat-list-item role=\"listitem\" >\r\n\r\n                            <mat-form-field style=\"width:300px;\">\r\n                                <input id=\"password\" matInput formControlName=\"password\" [(ngModel)]=\"user.password\"\r\n                                    placeholder=\"Enter your password\" [type]=\"hide ? 'password': 'text'\" />\r\n                                <mat-icon matSuffix (click)=\"hide= !hide\">\r\n                                    {{hide ? 'visibility': 'visibility_off'}}\r\n                                </mat-icon>\r\n                            </mat-form-field>\r\n                        </mat-list-item>\r\n                        <mat-list-item role=\"listitem\" >\r\n\r\n                            <mat-form-field style=\"width:300px;\">\r\n                                <input id=\"confirmPassword\" matInput formControlName=\"confirmPassword\"\r\n                                    [(ngModel)]=\"user.confirmPassword\" placeholder=\"Enter your password again\" [type]=\"hide ? 'password': 'text'\" />\r\n                            </mat-form-field>\r\n                        </mat-list-item>\r\n                        <mat-list-item role=\"listitem\" >\r\n\r\n                          <button mat-button type=\"submit\" class=\"mat-raised-button mat-primary\"\r\n                          [disabled]=\"!registerForm.valid\">Register</button>\r\n                        </mat-list-item>\r\n                        <mat-list-item>\r\n                                <h3 (click)=\"gotologin()\">Already a user ? Login <a routerLink=\"/login\">here</a></h3>\r\n\r\n                        </mat-list-item>\r\n                    </mat-list>\r\n                </div>\r\n            </form>\r\n        </mat-card>\r\n\r\n    </mat-grid-tile>\r\n</mat-grid-list>\r\n    <!-- footer section start here -->\r\n    <footer style=\"color: white;\">\r\n        <div>Copyright © Sergbo All rights reserved.</div>\r\n        <div>\r\n            <a style=\"color: white;\" href=\"\">Privacy Statement  </a>\r\n            <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n        </div>\r\n    </footer> <!-- footer section end here -->\r\n</body>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { StompService, StompConfig, StompState } from \"@stomp/ng2-stompjs\";\r\nimport { Message } from \"@stomp/stompjs\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\n\r\nexport class MessagingService {\r\n  private messages: Observable<Message>;\r\n  private stompService: StompService;\r\n  doubt: String;\r\n  constructor(socketUrl: string, streamUrl: string) {\r\n    // Create Stomp Configuration\r\n    let stompConfig: StompConfig = {\r\n      url: socketUrl,\r\n      headers: {\r\n        login: \"\",\r\n        passcode: \"\"\r\n      },\r\n      heartbeat_in: 0,\r\n      heartbeat_out: 20000,\r\n      reconnect_delay: 5000,\r\n      debug: true\r\n    };\r\n\r\n    // Create Stomp Service\r\n    this.stompService = new StompService(stompConfig);\r\n\r\n    // Connect to a Stream\r\n    this.messages = this.stompService.subscribe(streamUrl);\r\n  }\r\n\r\n  public stream(): Observable<Message> {\r\n    return this.messages;\r\n  }\r\n\r\n  public send(url: string, message: any) {\r\n    return this.stompService.publish(url, JSON.stringify(message));\r\n  }\r\n\r\n  public state(): BehaviorSubject<StompState> {\r\n    return this.stompService.state;\r\n  }\r\n\r\n  public message(doubt){\r\n    return this.doubt=doubt;\r\n  }\r\n\r\n  public xyz(){\r\n    return this.doubt;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(public jwtHelper: JwtHelperService) {}\r\n  public isAuthenticated(): boolean {\r\n    const token = sessionStorage.getItem('token');\r\n   \r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Feedback } from './models/feedback.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class FeedbackService{\r\n    constructor(private http: HttpClient) { }\r\n\r\n    saveFeedback(feedback:Feedback){\r\n        return this.http.patch<Feedback>(`http://localhost:8080/mentor-profile-service/mentors/${feedback.email}/feedback?rating=${feedback.rating}` , feedback )\r\n\r\n    }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Cookie } from 'ng2-cookies';\r\n\r\nexport class User{\r\n  constructor(\r\n    public status:string,\r\n     ) {}\r\n  \r\n}\r\n\r\nexport class JwtResponse{\r\n  constructor(\r\n    public jwttoken:string,\r\n     ) {}\r\n  \r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(\r\n    private httpClient:HttpClient\r\n  ) { \r\n     }\r\n\r\n     authenticate(email, password) {\r\n      return this.httpClient.post<any>('http://localhost:8080/authentication-service/authenticate',{email,password}).pipe(\r\n       map(\r\n         userData => {\r\n          sessionStorage.setItem('email',email);\r\n          sessionStorage.setItem('role',userData.token[1]);\r\n          let tokenStr= 'Bearer '+userData.token[2];\r\n          sessionStorage.setItem('token', tokenStr);\r\n          return userData;\r\n         }\r\n       )\r\n  \r\n      );\r\n    }\r\n  isUserLoggedIn() {\r\n    let user = sessionStorage.getItem('email')\r\n    //console.log(!(user === null))\r\n    return !(user === null)\r\n  }\r\n\r\n  logOut() {\r\n    sessionStorage.removeItem('email');\r\n    Cookie.delete('email')\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport { MentorProfileService } from '../mentor-profile.service';\r\nimport { FAQ } from '../models/faq.model';\r\nimport { StudentProfileService } from '../student-profile.service';\r\nimport { StudentProfileComponent } from '../student-profile/student-profile.component';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.component.html',\r\n  styleUrls: ['./faq.component.css']\r\n})\r\nexport class FaqComponent implements OnInit {\r\n  name = this.service1.abc().split('@')[0].toUpperCase();\r\n\r\n  faq : FAQ = new FAQ();\r\n  updateForm1: FormGroup\r\n  hide = true;\r\n  breakpoint: number;\r\n  avatar=this.name.charAt(0).toUpperCase();\r\n\r\n  constructor(private formBuilder: FormBuilder,private service1:StudentProfileService,private service:MentorProfileService , private router:Router ) {}\r\n\r\n  ngOnInit(): void \r\n  {\r\n    this.updateForm1 = this.formBuilder.group({\r\n      subject: [this.faq.subject, [\r\n        Validators.required\r\n      ]],\r\n      solution: [this.faq.solution, [\r\n        Validators.required,\r\n      ]],\r\n      query: [this.faq.query, [\r\n        Validators.required,\r\n      ]],\r\n    });\r\n    this.breakpoint = (window.innerWidth <= 600) ? 1 : 2;\r\n  }\r\n  OnSave()\r\n  {\r\n    console.log(this.updateForm1.value);\r\n    const faq1 : FAQ = {\r\n         subject : this.updateForm1.value.subject,\r\n         query : this.updateForm1.value.query,\r\n         solution : this.updateForm1.value.solution\r\n       };\r\n    this.service.saveFaq(faq1).subscribe(data =>{\r\n      this.faq = data\r\n      console.log(this.faq);\r\n    })\r\n    this.router.navigate(['/mentor-profile']);  }\r\n\r\n    Logout(){\r\n      Cookie.deleteAll()\r\n      sessionStorage.clear();\r\n    }\r\n}\r\n","<header>\r\n  <mat-toolbar color=\"primary\" class=\"navbar\">\r\n\r\n      <span routerLink=\"\" id=\"bar1\" style=\"width: 30%;\"><img src=\"/assets/img/header.png\" width=\"50px\"\r\n              height=\"50px\">Nimbleguru</span>\r\n              <span style=\"font-size: 70%;\">{{name}} \r\n                <button mat-button [matMenuTriggerFor]=\"menu\" #menuTrigger id='abc'>\r\n                <div\r\n                    style=\"width: 40px; height: 40px;background-color:#95DBEF ; border-radius: 20px; margin-right: 12px;\">\r\n        \r\n                    <div style=\"font-size: 17px; padding: 7px; padding-top: 3px; color: black;\">{{avatar}}</div>\r\n                </div>\r\n            </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n              <button mat-menu-item routerLink=\"/student-profile\">Profile</button>\r\n              <button mat-menu-item routerLink=\"/\" (click)=\"Logout()\">Logout</button>\r\n\r\n          </mat-menu>\r\n      </span>\r\n      <!-- <span style=\"float: right;margin-left: 78%;\">{{name}}</span><i class=\"fa fa-user-circle fa-2x\" routerLink=\"/student-profile\" id=\"circle\"></i>     -->\r\n      <!-- <button mat-raised-button color=\"accent\" routerLink=\"/login\" (click)=\"Logout()\">Logout</button> -->\r\n  </mat-toolbar>\r\n</header>\r\n<body>\r\n\r\n<div class=\"main-div\">\r\n <mat-card style=\"width: 650px; height: 550px; margin-top: 90px;\">\r\n     <form [formGroup]=\"updateForm1\" (ngSubmit)=\"updateForm1.valid\" novalidate>\r\n         <mat-grid-list [cols]=\"1\">\r\n             <mat-grid-tile>\r\n                 <div class=\"form-container\" style=\"width: 500px;\">\r\n                     <h1 style=\"font-weight: 600; margin-left: 30px;\">Frequently asked questions</h1>\r\n                     <mat-list>\r\n                       <!-- <div class = \"id\">\r\n                         <mat-list-item role=\"listitem\">\r\n                             <mat-form-field>\r\n                                 <input id=\"name\" matInput formControlName=\"id\" [(ngModel)]=\"faq.id\"\r\n                                     placeholder=\"Enter SessionId\"/>\r\n                             </mat-form-field>\r\n                           </mat-list-item>\r\n                       </div> -->\r\n                       <!-- <div class = \"id\">\r\n                         <mat-list-item role=\"listitem\">\r\n                           <mat-form-field style=\"width: 500px;\">\r\n                             <input id=\"name\" matInput formControlName=\"topicname\" [(ngModel)]=\"faq.topicname\"\r\n                                 placeholder=\"Enter yourTopic Name\"/>\r\n                           </mat-form-field>\r\n                         </mat-list-item>\r\n                       </div> -->\r\n                       <div class = \"id\">\r\n                         <mat-list-item role=\"listitem\" appearance=\"outline\">\r\n                         <mat-form-field>\r\n                             <input id=\"class\" matInput formControlName=\"subject\" [(ngModel)]=\"faq.subject\"\r\n                                 placeholder=\"Enter your Subject\" />\r\n                         </mat-form-field>\r\n                         </mat-list-item>\r\n                       </div>\r\n                       <div class = \"id1\">\r\n                         <mat-list-item role=\"listitem\">\r\n                         <mat-form-field>\r\n                             <textarea id=\"query\" matInput  formControlName=\"query\" [(ngModel)]=\"faq.query\"\r\n                                 placeholder=\"Enter few keywords like: gravity, pythagoras etc.\"></textarea>\r\n                         </mat-form-field>\r\n                         </mat-list-item>\r\n                       </div>\r\n                       <div class = \"id2\">\r\n\r\n                         <mat-list-item role=\"listitem\">\r\n                         <mat-form-field appearance=\"outline\">\r\n                             <textarea id=\"solution\" matInput  rows=\"5\" cols=\"3\" formControlName=\"solution\" [(ngModel)]=\"faq.solution\"\r\n                                 placeholder=\"Enter your Solution\"></textarea>\r\n                         </mat-form-field>\r\n                         </mat-list-item>\r\n                       </div>\r\n                         <span class =\"bottomrow\">\r\n                             <button mat-button type=\"submit\"  class=\"mat-raised-button mat-primary\" (click) = \"OnSave()\">Submit</button>\r\n                         </span>\r\n                     </mat-list>\r\n                 </div>\r\n             </mat-grid-tile>\r\n         </mat-grid-list>\r\n     </form>\r\n </mat-card>\r\n</div>\r\n\r\n\r\n<!-- footer section start here -->\r\n<footer style=\"color: white;\">\r\n  <div>Copyright © Sergbo All rights reserved.</div>\r\n  <div>\r\n      <a style=\"color: white;\" href=\"\">Privacy Statement  </a>\r\n      <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n  </div>\r\n</footer>\r\n</body>\r\n\r\n<!-- footer section end here -->","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport { FAQ } from '../models/faq.model';\r\nimport { StudentProfileService } from '../student-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-faq-by-subject',\r\n  templateUrl: './faq-by-subject.component.html',\r\n  styleUrls: ['./faq-by-subject.component.css']\r\n})\r\nexport class FaqBySubjectComponent implements OnInit {\r\n subject: String;\r\n//  queries:String[];\r\n faq: FAQ[];\r\n  constructor(private studentProfileService: StudentProfileService) { }\r\n  name = this.studentProfileService.abc().split('@')[0].toUpperCase();\r\n  avatar=this.name.charAt(0).toUpperCase();\r\n\r\n  ngOnInit(): void {\r\n    // this.studentProfileService.getFaqBySubject(this.subject).subscribe(data=> this.subject=data);\r\n    // console.log(this.subject)\r\n    this.subject = this.studentProfileService.getSubject();\r\n    console.log(this.studentProfileService.getSubject());\r\n    this.studentProfileService.getFaqBySubject(this.subject).subscribe(data => {this.faq = data;\r\n      console.log(this.faq)});\r\n  }\r\nLogout() {\r\n    Cookie.deleteAll()\r\n    sessionStorage.clear();\r\n  }\r\n}\r\n","<!-- Header section start here -->\r\n<header>\r\n    <mat-toolbar color=\"primary\" class=\"navbar\">\r\n\r\n        <span routerLink=\"\" id=\"bar1\" style=\"margin-left: 5px;\"><img src=\"/assets/img/header.png\" width=\"60px\"\r\n                height=\"60px\">Nimbleguru</span>\r\n                <span style=\"font-size: 70%;\">{{name}} \r\n                    <button mat-button [matMenuTriggerFor]=\"menu\" #menuTrigger id='abc'>\r\n                    <div\r\n                        style=\"width: 40px; height: 40px;background-color:#95DBEF ; border-radius: 20px; margin-right: 12px;\">\r\n            \r\n                        <div style=\"font-size: 17px; padding: 7px; padding-top: 3px; color: black;\">{{avatar}}</div>\r\n                    </div>\r\n                </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item routerLink=\"/student-profile\">Profile</button>\r\n                <button mat-menu-item routerLink=\"/\" (click)=\"Logout()\">Logout</button>\r\n\r\n            </mat-menu>\r\n        </span>\r\n        <!-- <span style=\"float: right;margin-left: 78%;\">{{name}}</span><i class=\"fa fa-user-circle fa-2x\" routerLink=\"/student-profile\" id=\"circle\"></i>     -->\r\n        <!-- <button mat-raised-button color=\"accent\" routerLink=\"/login\" (click)=\"Logout()\">Logout</button> -->\r\n    </mat-toolbar>\r\n</header>\r\n<body>\r\n    \r\n\r\n<mat-list-item role=\"listitem\" style=\"height: auto;\" >\r\n   <h1 style=\"text-align: center;\">Frequently Asked Questions</h1>\r\n    \r\n   <mat-card *ngFor=\"let f of faq\">Query: {{f?.query}}\r\n        <div mat-line>Solution: {{f?.solution}}</div>\r\n    </mat-card>\r\n    <!-- <mat-card>Query\r\n        <div mat-line>Solution</div>\r\n    </mat-card>\r\n    <mat-card>Query\r\n        <div mat-line>Solution</div>\r\n    </mat-card>\r\n    <mat-card>Query\r\n        <div mat-line>Solution</div>\r\n    </mat-card>\r\n    <mat-card>Query\r\n        <div mat-line>Solution</div>\r\n    </mat-card>\r\n    <mat-card>Query\r\n        <div mat-line>Solution</div>\r\n    </mat-card>\r\n    <mat-card>Query\r\n        <div mat-line>Solution</div>\r\n    </mat-card>\r\n    <mat-card>Query\r\n        <div mat-line>Solution</div>\r\n    </mat-card> -->\r\n</mat-list-item>\r\n\r\n<!-- footer section start here -->\r\n<footer style=\"color: white; \">\r\n    <div>Copyright © Sergbo All rights reserved.</div>\r\n    <div>\r\n        <a style=\"color: white;\" href=\"\">Privacy Statement </a>\r\n        <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n    </div>\r\n</footer>\r\n<!-- footer section end here -->\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MentorProfileService } from '../mentor-profile.service';\r\nimport { Mentor } from '../models/mentor.model';\r\nimport { StudentProfileService } from '../student-profile.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport { parse } from 'path';\r\n@Component({\r\n  selector: 'app-mentor-registration',\r\n  templateUrl: './mentor-registration.component.html',\r\n  styleUrls: ['./mentor-registration.component.css']\r\n})\r\nexport class MentorRegistrationComponent implements OnInit {\r\n\r\n  mentor : Mentor = new Mentor();\r\n  mentor1 : Mentor = new Mentor();\r\n  updateForm: FormGroup;\r\n  hide = true;\r\n  breakpoint: number;\r\n  subjects: any[] = [ 'Physics', 'Maths', 'English', 'Java', 'Chemistry','Civics', 'Economics' , 'Python' , 'Biology','History' , 'Accounts' ,'Business Administration' , 'Geography', 'Political Science'];\r\n  time11: any[] = ['00:00', '1:00', '2:00', '3:00', '4:00', '5:00', '6:00', '7:00', '8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'];\r\n  myDate = new Date();\r\n  constructor(private snackbar : MatSnackBar,private formBuilder: FormBuilder, private service1:StudentProfileService,private service:MentorProfileService,private router: Router,private datePipe: DatePipe) { }\r\n  email1 :String = this.service1.abc();\r\n  ngOnInit(): void\r\n  {\r\n    this.service.getByEmail(this.email1).subscribe\r\n    {\r\n      (data => this.mentor1 = data);\r\n      console.log(this.mentor1);\r\n      if(this.mentor.name == null)\r\n      {\r\n        console.log(\"sgdhf\");\r\n      }\r\n    }\r\n\r\n    console.log(this.mentor1);\r\n    this.updateForm = this.formBuilder.group({\r\n      name: [this.mentor.name, [\r\n        Validators.required,\r\n        Validators.pattern(/^[a-zA-Z]+ [a-zA-Z]+$/)\r\n      ]],\r\n      email :[this.email1,[\r\n        Validators.required\r\n      ]],\r\n      phoneNumber: [this.mentor.phoneNumber, [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n        Validators.maxLength(10),\r\n        Validators.pattern(/^[0-9]\\d*$/)\r\n      ]],\r\n      subject: [this.mentor.subject, [\r\n        Validators.required,\r\n      ]],\r\n      qualification: [this.mentor.qualification,\r\n         [Validators.required,\r\n      ]],\r\n      startTime : [this.mentor.time,[Validators.required]],\r\n      endTime :[this.mentor.time,[Validators.required,]]\r\n    });\r\n    this.breakpoint = (window.innerWidth <= 600) ? 1 : 2;\r\n\r\n}\r\n  OnSave()\r\n  {\r\n      const mentor2: Mentor = {\r\n        // id: 4645,\r\n        \r\n        name: this.updateForm.value.name,\r\n        phoneNumber: this.updateForm.value.phoneNumber,\r\n        email: this.updateForm.value.email,\r\n        qualification: this.updateForm.value.qualification,\r\n        subject: this.updateForm.value.subject,\r\n        status:this.updateForm.value.status,\r\n        joining_date:this.datePipe.transform(this.myDate, 'dd MMM, yyyy'),\r\n        comment:null,\r\n        sessions:this.updateForm.value.sessions,\r\n        time:[\r\n          {\r\n            \"startTime\": this.updateForm.value.startTime.split(':')[0],\r\n            \"endTime\": this.updateForm.value.endTime.split(':')[0]\r\n          }],\r\n        rating: 4\r\n        // creditStore: 0\r\n  \r\n      };\r\n    console.log(\"dbscjdbskvjbkfj\"+mentor2);\r\n\r\n    // this.service.sucess();\r\n    this.service.saveMentor(mentor2).subscribe(data =>{\r\n      this.snackbar\r\n      // tslint:disable-next-line: max-line-length\r\n      .open((\"Your Profile is Updated\"), '', {\r\n        verticalPosition: 'top',\r\n        duration:1000\r\n       })\r\n      this.mentor = data\r\n      console.log(mentor2);\r\n    })\r\n\r\n  }\r\n  onResize(event) {\r\n    this.breakpoint = (event.target.innerWidth <= 600) ? 1 : 2;\r\n  }\r\n  Logout(){\r\n    Cookie.deleteAll()\r\n    sessionStorage.clear();\r\n  }\r\n}\r\n","<header>\r\n    <mat-toolbar color=\"primary\" class=\"navbar\">\r\n        <span routerLink=\"\" id=\"bar1\" style=\"margin-left: 5px;\"><img src=\"/assets/img/header.png\" width=\"60px\"\r\n            height=\"60px\">Nimbleguru</span>    </mat-toolbar>\r\n\r\n</header>\r\n<div class=\"main-div\">\r\n    <mat-card>\r\n        <mat-card-title style=\"margin-left:150px ; margin-bottom: 50px; margin-top:20px ;\">Let's first create your profile!</mat-card-title>\r\n        <form [formGroup]=\"updateForm\" (ngSubmit)=\"updateForm.valid\" novalidate>\r\n            <mat-grid-list [cols]=\"2\" rowHeight=\"300px\">\r\n                <mat-grid-tile>\r\n                    <div class=\"form-container\">\r\n                        <div class=\"id\">\r\n                            <mat-form-field>\r\n                                <input id=\"email\" matInput disabled formControlName=\"email\" placeholder=\"Enter your Email\" />\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"id\">\r\n                            <mat-form-field>\r\n                                <input id=\"name\" matInput formControlName=\"name\" [(ngModel)]=\"mentor.name\" placeholder=\"Enter your name\" />\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"id\">\r\n                            <mat-form-field>\r\n                                <input id=\"phoneNumber\" matInput formControlName=\"phoneNumber\" [(ngModel)]=\"mentor.phoneNumber\" placeholder=\"Enter your phoneNumber\" />\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"id\">\r\n                            <mat-form-field>\r\n                                <mat-label>Select subject</mat-label>\r\n                                <mat-select formControlName=\"subject\" [(ngModel)]=\"mentor.subject\" multiple>\r\n                                    <mat-option *ngFor=\"let subject1 of subjects\" [value]=\"subject1\">\r\n                                        {{subject1}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <!-- <mat-form-field>\r\n                               <input id=\"email\" matInput formControlName=\"email\"\r\n                                   [(ngModel)]=\"mentor.email\" placeholder=\"Enter your email\" />\r\n                           </mat-form-field> -->\r\n                    </div>\r\n                </mat-grid-tile>\r\n                <mat-grid-tile>\r\n                    <div class=\"form-container\">\r\n\r\n                        <div class=\"id\">\r\n                            <mat-form-field>\r\n                                <mat-label>I will be available from</mat-label>\r\n                                <mat-select formControlName=\"startTime\">\r\n                                    <mat-option *ngFor=\"let times of time11\" [value]=\"times\">\r\n                                        {{times}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"id\">\r\n                            <mat-form-field>\r\n                                <mat-label>I will be available upto</mat-label>\r\n                                <mat-select formControlName=\"endTime\">\r\n                                    <mat-option *ngFor=\"let times1 of time11\" [value]=\"times1\">\r\n                                        {{times1}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"id\">\r\n                            <mat-form-field>\r\n                                <input id=\"class\" matInput formControlName=\"qualification\" placeholder=\"Enter your Qualification\" />\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"bottomrow\" style=\"margin-left: 140px;\">\r\n                            <button mat-button routerLink=\"/mentor-profile\" type=\"submit\" class=\"mat-raised-button mat-primary\" (click)=\"OnSave()\" [disabled]=\"!updateForm.valid\">Save Changes</button>\r\n                        </div>\r\n                    </div>\r\n                </mat-grid-tile>\r\n            </mat-grid-list>\r\n        </form>\r\n    </mat-card>\r\n</div>\r\n<!-- footer section start here -->\r\n<footer style=\"color: white;\">\r\n    <div>Copyright © Sergbo All rights reserved.</div>\r\n    <div>\r\n        <a style=\"color: white;\" href=\"\">Privacy Statement  </a>\r\n        <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n    </div>\r\n  </footer>\r\n  <!-- footer section end here -->","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport { FeedbackService } from '../feedback.service';\r\nimport { MentorProfileService } from '../mentor-profile.service';\r\nimport { MentorProfileComponent } from '../mentor-profile/mentor-profile.component';\r\nimport { Feedback } from '../models/feedback.model';\r\nimport { SessionService } from '../session.service';\r\nimport { StudentProfileService } from '../student-profile.service';\r\nimport { MatMenuModule} from '@angular/material/menu';\r\n@Component({\r\n  selector: 'app-feedback',\r\n  templateUrl: './feedback.component.html',\r\n  styleUrls: ['./feedback.component.css']\r\n})\r\nexport class FeedbackComponent implements OnInit {\r\n  name = this.studentProfileService.abc().split('@')[0].toUpperCase();\r\n\r\n  stars: number[] = [1, 2, 3, 4, 5];\r\n  selectedValue: number;\r\n  feedback: Feedback = new Feedback();\r\n  feedbackForm: FormGroup;\r\n  rating: number;\r\n  avatar=this.name.charAt(0).toUpperCase();\r\n  sessionId:String;\r\n  // email:String = this.studentProfileService.abc();\r\n  // email:String = \"khans12311e23d12ka35678527@gmail.com\";\r\n  session:any;\r\n  constructor(private _route:ActivatedRoute,private mps:MentorProfileService ,private ss: SessionService , private Fservice: FeedbackService, private formBuilder: FormBuilder, private studentProfileService: StudentProfileService, private router:Router) {\r\n    this._route.params.subscribe(params => {\r\n      console.log(\"params\" , params[\"sid\"])\r\n      this.sessionId = params[\"sid\"];\r\n    })\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.feedbackForm = this.formBuilder.group({\r\n      'comment': [this.feedback.comment]\r\n    });\r\n    // this.feedback.email = \"vishalkapoor1@gmail.com\";\r\n    let abc = this.ss.getSessionbyID(this.sessionId).subscribe(data=>{this.session=data;\r\n      this.feedback.email = this.session.teacherEmail;\r\n      console.log(this.feedback.email);\r\n    });\r\n  }\r\n\r\n\r\n  countStar(star) {\r\n    this.selectedValue = star;\r\n    console.log('Value of star', star);\r\n    console.log(star)\r\n    this.feedback.rating = star;\r\n    \r\n\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.Fservice.saveFeedback(this.feedback).subscribe(data => this.feedback = data);\r\n    this.router.navigate(['/student-profile']);\r\n\r\n  }\r\n  Logout(){\r\n    Cookie.deleteAll()\r\n    sessionStorage.clear();\r\n  }\r\n}\r\n","<body>\r\n\r\n    <header>\r\n        <mat-toolbar color=\"primary\" class=\"navbar\">\r\n      \r\n            <span routerLink=\"\" id=\"bar1\" style=\"width: 30%;\"><img src=\"/assets/img/header.png\" width=\"50px\"\r\n                    height=\"50px\">Nimbleguru</span>\r\n                    <span style=\"font-size: 70%;\">{{name}} \r\n                        <button mat-button [matMenuTriggerFor]=\"menu\" #menuTrigger id='abc'>\r\n                        <div\r\n                            style=\"width: 40px; height: 40px;background-color:#95DBEF ; border-radius: 20px; margin-right: 12px;\">\r\n                \r\n                            <div style=\"font-size: 17px; padding: 7px; padding-top: 3px; color: black;\">{{avatar}}</div>\r\n                        </div>\r\n                    </button>\r\n                <mat-menu #menu=\"matMenu\">\r\n                    <button mat-menu-item routerLink=\"/student-profile\">Profile</button>\r\n                    <button mat-menu-item routerLink=\"/\" (click)=\"Logout()\">Logout</button>\r\n      \r\n                </mat-menu>\r\n            </span>\r\n            <!-- <span style=\"float: right;margin-left: 78%;\">{{name}}</span><i class=\"fa fa-user-circle fa-2x\" routerLink=\"/student-profile\" id=\"circle\"></i>     -->\r\n            <!-- <button mat-raised-button color=\"accent\" routerLink=\"/login\" (click)=\"Logout()\">Logout</button> -->\r\n        </mat-toolbar>\r\n      </header>\r\n\r\n\r\n<mat-grid-list cols=1 rowHeight=\"100%\">\r\n<!-- <mat-grid-tile colspan=1>\r\n\r\n\r\n</mat-grid-tile> -->\r\n<mat-grid-tile>\r\n    <mat-list >\r\n        <mat-list-item>\r\n            <h1 style=\"font-size: 170%;\">Your feedback is valuable to us!!</h1>\r\n        </mat-list-item>\r\n        <mat-list-item style=\"margin-top: 20px; padding: 0px;\">\r\n            <ul class=\"list-inline rating-list\" *ngFor=\"let star of stars\"\r\n                style=\"display: inline-block; padding-left: 0px; padding-right: 35px;\">\r\n                <li (click)=\"countStar(star)\" [ngClass]=\"{'selected': (star <= selectedValue)}\">\r\n                    <i class=\"fa fa-star fa-2x\" style=\"padding: 0px; margin: 0px;\"></i>\r\n                </li>\r\n            </ul>\r\n        </mat-list-item>\r\n        <mat-list-item style=\"margin-top:40px ;\">\r\n\r\n\r\n            <form [formGroup]=\"feedbackForm\" (ngSubmit)=\"feedbackForm.valid && onSubmit()\" novalidate>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"width: 400px;\">\r\n                    <input id=\"comment\" matInput formControlName=\"comment\" [(ngModel)]=\"feedback.comment\"\r\n                        placeholder=\"Comments\">\r\n                </mat-form-field>\r\n                <br>\r\n                <button style=\"margin-left: 300px;\" type=\"submit\" mat-raised-button color=\"primary\">Submit</button>\r\n\r\n            </form>\r\n        </mat-list-item>\r\n\r\n    </mat-list>\r\n</mat-grid-tile>\r\n\r\n<!-- <mat-grid-tile colspan=1>\r\n</mat-grid-tile> -->\r\n\r\n</mat-grid-list>    <!-- </mat-grid-tile>\r\n</mat-grid-list> -->\r\n    <!-- footer section start here -->\r\n    <footer style=\"color: white;\">\r\n        <div>Copyright © Sergbo All rights reserved.</div>\r\n        <div>\r\n            <a style=\"color: white;\" href=\"\">Privacy Statement </a>\r\n            <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n        </div>\r\n    </footer> <!-- footer section end here -->\r\n</body>","import { Session } from './session.model';\r\n\r\n\r\nexport class RegisterModel{\r\n    name: String;\r\n    phoneNumber: number;\r\n    email: any;\r\n    standard: number;\r\n    password: String\r\n    confirmPassword: String;\r\n    sessions: Session[];\r\n    time : any\r\n}","export class Feedback{\r\n    rating:number;\r\n    comment:String;\r\n    email:String\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Cookie } from 'ng2-cookies';\r\n\r\n@Component({\r\n  selector: 'app-landing-page',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.css']\r\n})\r\nexport class LandingPageComponent implements OnInit {\r\n\r\n  breakpoint: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.breakpoint = (window.innerWidth <= 600) ? 1 : 2;\r\n    Cookie.set(\"email\",\"vishalkapoorbkn@gmail.com\")\r\n    Cookie.set(\"role\",\"S\")\r\n\r\n\r\n  }\r\n  // tslint:disable-next-line: typedef\r\n  onResize(event) {\r\n    this.breakpoint = (event.target.innerWidth <= 600) ? 1 : 2;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\"\r\n    integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin=\"anonymous\">\r\n\r\n    <!-- Header section start here -->\r\n    <header>\r\n        <mat-toolbar color=\"primary\" class=\"navbar\">\r\n            <span routerLink=\"\" id=\"bar1\" style=\"width: 30%;\"><img src=\"/assets/img/header.png\" alt=\"Nimbleguru\" width=\"60px\" height=\"60px\"> Nimbleguru</span>\r\n            <span>\r\n                <span ><button routerLink=\"/login\" mat-button>Login</button></span>\r\n                <span><button  routerLink=\"/student-registration\" mat-raised-button>Register</button></span>\r\n            </span>\r\n        </mat-toolbar>\r\n    </header> <!-- Header section end here -->\r\n\r\n    <!-- Maim section start here -->\r\n    <body style=\"background-image: url(/assets/img/BG.png);\">\r\n\r\n    <main class=\"discription\" >\r\n        <mat-grid-list [cols]=\"breakpoint\" rowHeight=\"1:1\" (window:resize)=\"onResize($event)\">\r\n            <mat-grid-tile>\r\n                <img alt=\"Logo\" src=\"/assets/img/LogoSerbo-Recovered copy.png \">\r\n            </mat-grid-tile>\r\n            <mat-grid-tile> \r\n                <mat-list>\r\n                    <h1>Where Doubt Get Resolved</h1>\r\n                    <p> Welcome to Nimbleguru! This is a static website, so you can access some of the features via buttons below. Actual product contains spring backend and Rest APIs too. Chat functionality will work using websockets\r\n                    </p>\r\n                    <button routerLink=\"/home\" mat-raised-button color=\"primary\">Home</button>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp;                    \r\n                    <button routerLink=\"/feedback/123\" mat-raised-button color=\"primary\">Feedback</button>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp;\r\n                    <button routerLink=\"/student-profile\" mat-raised-button color=\"primary\">Profile</button>\r\n                    <br><br>\r\n                    <button routerLink=\"/login\" mat-raised-button color=\"primary\">Login</button>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp;\r\n                    <button routerLink=\"/student-registration\" mat-raised-button color=\"primary\">Registeration</button>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp;\r\n                    <button routerLink=\"**\" mat-raised-button color=\"primary\">Error page</button>\r\n                </mat-list>\r\n            </mat-grid-tile>\r\n        </mat-grid-list>\r\n    </main> <!-- Maim section end here -->\r\n</body>\r\n    <!-- footer section start here -->\r\n    <footer style=\"color: white;\">\r\n        <div>Copyright © Sergbo All rights reserved.</div>\r\n        <div>\r\n            <a style=\"color: white;\" href=\"\">Privacy Statement  </a>\r\n            <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n        </div>\r\n    </footer> <!-- footer section end here -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MessageModel } from '../models/message.model';\r\nimport * as Stomp from 'stompjs';\r\nimport * as SockJS from 'sockjs-client';\r\nimport * as $ from 'jquery';\r\n\r\nimport { StudentProfileService } from '../student-profile.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MentorProfileService } from '../mentor-profile.service';\r\nimport { Mentor } from '../models/mentor.model';\r\nimport { Session } from '../models/session.model';\r\nimport { SessionService } from '../session.service';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport { MatMenuModule} from '@angular/material/menu';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\n\r\n\r\n@Component({\r\n  selector: 'app-chat-application',\r\n  templateUrl: './chat-application.component.html',\r\n  styleUrls: ['./chat-application.component.css']\r\n})\r\nexport class ChatApplicationComponent {\r\n  CurrentsessionId = this.ms.getSessionId();\r\n  mentor: Mentor;\r\n  session:any;\r\n  receivedMessage: MessageModel = new MessageModel();\r\n  senderEmail: String = this.service.abc().split('@')[0];\r\n  //  email2:String=this.ms.getMentorEmail();\r\n  private serverUrl = 'http://localhost:8089/socket'\r\n  // private serverUrl = 'http://localhost:8080/mentor-platfrom-service/socket'\r\n  private title = 'WebSockets chat';\r\n  private stompClient;\r\n  sid:String;\r\n\r\n  name = this.service.abc().split('@')[0].toUpperCase();\r\n  avatar=this.name.charAt(0).toUpperCase();\r\n\r\n\r\n  constructor(private service: StudentProfileService, private router: Router, private ms: MentorProfileService, private ss: SessionService, private _route: ActivatedRoute) {\r\n    this.initializeWebSocketConnection();\r\n    // this.email1=this.service.abc();\r\n  }\r\n\r\n  initializeWebSocketConnection() {\r\n    this._route.params.subscribe(params => {\r\n      console.log(\"params\" , params[\"id\"])\r\n      this.sid = params[\"id\"];\r\n    })\r\n    // this.ss.getMentorEmail(this.service.abc(),\"Active\").subscribe(data=>{\r\n    //   this.session=data;\r\n    //   this.sid=this.session.sessionId;\r\n    //   console.log(this.session.sessionId);\r\n    // });\r\n    console.log(\"dcnkjcnkvnfdk\"+this.CurrentsessionId);\r\n    const ws = new SockJS(this.serverUrl);\r\n    this.stompClient = Stomp.over(ws);\r\n    const that = this;\r\n    this.stompClient.connect({}, function (frame) {\r\n      that.stompClient.subscribe(`/chat/${that.sid}`, (message) => {\r\n        that.receivedMessage = JSON.parse(message.body);\r\n\r\n        if (message) {\r\n          $(\".chat\").append(\"<div style='background-color:wite;color:black;padding:5px;font-size:14px; font-weight:600; text-transform:capitalize' class='message'>\" + that.receivedMessage.userName + \" \" + \"<span style='background-color:white;color:grey;padding:5px;font-size:14px' >\" + that.receivedMessage.timeStamp + \"</span>\" + \"</div>\")\r\n            .append(\"<div style='background-color:white;color:black;padding:5px;font-size:18px; padding-left:5px' class='message'> \" + that.receivedMessage.messageContent + \"</div>\")\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  sendMessage(msg) {\r\n    this.receivedMessage.userName = this.senderEmail;\r\n    //  this.message1.receiver=this.email2;\r\n    this.receivedMessage.messageContent = msg;\r\n    const send = {\r\n      sender: this.senderEmail,\r\n      // receiver:this.email2,\r\n      content: msg\r\n    };\r\n    console.log('hello ' + JSON.stringify(this.receivedMessage));\r\n    //console.log(\"ddd\"+this.session.sessionId);\r\n    this.stompClient.send(`/app/send/message/${this.sid}`, {}, JSON.stringify(this.receivedMessage));\r\n    $('#input').val('')\r\n  }\r\n  endChat() {\r\n\r\n  }\r\n\r\n  onClick=(e)=>{\r\n    console.log(e);\r\n    console.log(this.sid);\r\n    // this.ss.endSession(this.sid).subscribe(data=>{\r\n    //   this.session=data;\r\n    //   console.log(data);\r\n    // })\r\n    if (this.service.getRole() == 'M') {\r\n      this.ss.endSession(this.sid).subscribe(data=>{\r\n        this.session=data;\r\n        console.log(data);\r\n      })\r\n      this.router.navigate(['/frequently-asked-questions']);\r\n    }\r\n    else {\r\n      this.router.navigate([`feedback/${this.sid}`]);\r\n    }\r\n\r\n\r\n}\r\nLogout(){\r\n  Cookie.deleteAll()\r\n  sessionStorage.clear();\r\n}\r\n}\r\n\r\n","<header>\r\n  <mat-toolbar color=\"primary\" class=\"navbar\">\r\n\r\n      <span routerLink=\"/\" id=\"bar1\" style=\"width: 30%;\"><img src=\"/assets/img/header.png\" width=\"50px\"\r\n              height=\"50px\">Nimbleguru</span>\r\n      <span style=\"font-size: 70%;\">{{name}} \r\n        <button mat-button [matMenuTriggerFor]=\"menu\" #menuTrigger id=\"abc\">\r\n        <div\r\n            style=\"width: 40px; height: 40px;background-color:#95DBEF ; border-radius: 20px; margin-right: 12px;\">\r\n\r\n            <div style=\"font-size: 17px; padding: 7px; padding-top: 3px; color: black;\">{{avatar}}</div>\r\n        </div>\r\n    </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n              <button mat-menu-item routerLink=\"/student-profile\">Profile</button>\r\n              <button mat-menu-item routerLink=\"/\" (click)=\"Logout()\">Logout</button>\r\n\r\n          </mat-menu>\r\n      </span>\r\n      <!-- <span style=\"float: right;margin-left: 78%;\">{{name}}</span><i class=\"fa fa-user-circle fa-2x\" routerLink=\"/student-profile\" id=\"circle\"></i>     -->\r\n      <!-- <button mat-raised-button color=\"accent\" routerLink=\"/login\" (click)=\"Logout()\">Logout</button> -->\r\n  </mat-toolbar>\r\n</header>\r\n<body style=\"background-image:url('/assets/img/BG.png') ;\">\r\n\r\n<div style=\"text-align:center\">\r\n  <h1 style=\"font-weight: 600;\">\r\n    Conversation\r\n  </h1>\r\n  <div class=\"chat-container\">\r\n    <div class=\"chat\"  style=\"background-color: white ;\">\r\n      <div  class=\"message\"></div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div  style=\" padding: 15px 0px 0px 0px;\">\r\n  <div class=\"send-button\">\r\n\r\n\r\n    <input  id=\"input\" placeHolder=\"This will work using websockets.\" type=\"text\" #input>\r\n    <button mat-raised-button color=\"primary\" id='asdf' (click)=\"sendMessage(input.value)\">Send\r\n    </button>\r\n\r\n  </div>\r\n\r\n</div>\r\n<button id=\"myButton\" mat-raised-button color=\"warn\" (click) = \"onClick($event)\">End Chat</button>\r\n\r\n\r\n</div>\r\n</body>\r\n<!-- footer section start here -->\r\n<footer style=\"color: white;\">\r\n  <div>Copyright © Sergbo All rights reserved.</div>\r\n  <div>\r\n      <a style=\"color: white;\" href=\"\">Privacy Statement  </a>\r\n      <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n  </div>\r\n</footer>\r\n<!-- footer section end here -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<h1>Error 404</h1>\r\n<br>\r\n<h2>Page not found</h2>\r\n<button routerLink=\"\" mat-raised-button color=\"primary\" >Go to Homepage</button>\r\n<div class=\"wrapper\">\r\n    <video class=\"videoInsert\" preload=\"auto\"\r\n    crossorigin loop autoplay onmouseout=\"this.pause();\">\r\n    <source src=\"/assets/img/Logo video.mp4 \" type=\"video/mp4\">\r\n   </video>\r\n  </div>\r\n","export class FAQ \r\n{\r\n    subject : String;\r\n    query : String;\r\n    solution : String;\r\n}\r\n\r\n","import { Component, Input, OnInit, ViewChild , ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { JwtClientService } from '../jwt-client.service';\r\nimport { StudentProfileService } from '../student-profile.service';\r\nimport { StudentProfileComponent } from '../student-profile/student-profile.component';\r\nimport { UpdateProfileComponent } from '../update-profile/update-profile.component';\r\nimport {MentorProfileService} from '../mentor-profile.service';\r\nimport {Mentor} from '../models/mentor.model';\r\nimport {MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MessagingService } from '../services/messaging.service';\r\nimport { Message } from '@stomp/stompjs';\r\n// import { AuthenticationService } from '../services/authentication.service';\r\nimport { StompState } from '@stomp/ng2-stompjs';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport { SessionService } from '../session.service';\r\nimport { PagerService } from '../PagerService';\r\nimport { Session } from 'protractor';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport { MatTableDataSource} from '@angular/material/table';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst WEBSOCKET_URL = 'ws://localhost:8082/socket';\r\n// const WEBSOCKET_URL = 'ws:/localhost:8080/mentor-profile-service/socket';\r\nconst EXAMPLE_URL = '/topic/server-broadcaster';\r\n\r\n@Component({\r\n  selector: 'app-mentor-profile',\r\n  templateUrl: './mentor-profile.component.html',\r\n  styleUrls: ['./mentor-profile.component.css']\r\n})\r\nexport class MentorProfileComponent implements OnInit,OnDestroy\r\n\r\n\r\n{\r\n  sessionArray: Session[];\r\n  \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  obs: Observable<any>;\r\n  dataSource: MatTableDataSource<Session>;\r\n  private messagingService: MessagingService;\r\n  name = this.service.abc().split('@')[0].toUpperCase();\r\n\r\n  messageHistory: String;\r\n  state: String = 'NOT CONNECTED';\r\n  subject: String= 'Maths';\r\n  public mentor: Mentor;\r\n  doubt: String;\r\n  isShow = true;\r\n  sessionId: any;\r\n  session:any;\r\n  avatar=this.name.charAt(0).toUpperCase();\r\n  // CurrentSessionId = this.MentorProfileService.getSessionId();\r\n  constructor(private changeDetectorRef: ChangeDetectorRef,private http: HttpClient,private pagerService: PagerService,private snackbar:MatSnackBar, private MentorProfileService: MentorProfileService , private service: StudentProfileService,private dialog:MatDialog,private authenticate: AuthenticationService,private router:Router,private ss:SessionService ) {\r\n    this.messagingService = new MessagingService(WEBSOCKET_URL, EXAMPLE_URL);\r\n    \r\n    this.MentorProfileService.getSessionByEmail(this.email).subscribe(x => {this.sessionArray = x;\r\n    // dataSource: MatTableDataSource<Session> = new MatTableDataSource<Session>(this.sessionArray);\r\n    this.dataSource = new MatTableDataSource<Session>(this.sessionArray);\r\n    console.log(this.sessionArray);\r\n    console.log(this.dataSource);\r\n    this.changeDetectorRef.detectChanges();\r\n    this.dataSource.paginator = this.paginator;\r\n    this.obs = this.dataSource.connect();\r\n  });\r\n\r\n\r\n    // Subscribe to its stream (to listen on messages)\r\n    this.messagingService.stream().subscribe((message: Message) => {\r\n      this.messageHistory = message.body;\r\n      this.isShow = true;\r\n      this.ss.getMentorEmail(this.service.abc(),\"Active\").subscribe(data=>{\r\n        this.session=data;\r\n        console.log(\"hello\"+this.session.sessionId);\r\n        this.snackbar\r\n        // tslint:disable-next-line: max-line-length\r\n        .open((message.body + ''), 'Connect', {\r\n          verticalPosition: 'top',\r\n          // duration:1000\r\n         })\r\n         .onAction()\r\n         .subscribe(() =>\r\n         this.router.navigate([`/chat/${this.session.sessionId}`]))\r\n         ;\r\n         console.log(\"vkvkvkvk\"+this.MentorProfileService.getSessionId())\r\n      console.log(message);\r\n    });\r\n\r\n      })\r\n\r\n\r\n\r\n    // Subscribe to its state (to know its connected or not)\r\n    this.messagingService.state().subscribe((state: StompState) => {\r\n      this.state = StompState[state];\r\n    });\r\n  }\r\n  email: String = this.service.abc();\r\n    // email:String =\"khan3578@gmail.com\"\r\n    private allItems: any;\r\n    pager: any = {};\r\n    pagedItems: any[];\r\n\r\n  ngOnInit()\r\n  {\r\n    // this.http.get(`http://localhost:8086/session/${this.email}`).subscribe(data => {\r\n    //     // set items to json response\r\n    //     this.allItems = data;\r\n    //     console.log(this.allItems);\r\n\r\n    //     // initialize to page 1\r\n    //     this.setPage(1);\r\n    // });\r\n\r\n  //   this.http.get(`http://localhost:8089/sessions/${this.email}`).subscribe(x => {this.sessionArray = x;\r\n  //   // dataSource: MatTableDataSource<Session> = new MatTableDataSource<Session>(this.sessionArray);\r\n  //   this.dataSource = new MatTableDataSource<Session>(this.sessionArray);\r\n  //   console.log(this.sessionArray);\r\n  //   console.log(this.dataSource);\r\n  // });\r\n      console.log(this.email);\r\n      this.MentorProfileService.getByEmail(this.email).subscribe(data => this.mentor = data);\r\n      Cookie.set('sessionId', this.MentorProfileService.getSessionId());\r\n    //  console.log(this.mentor1);\r\n    // this.messagingService.getSubject(this.subject).subscribe(data => this.)\r\n  }\r\n  ngOnChanges(){\r\n    this.isShow=false;\r\n  }\r\n\r\n  OnCreate()\r\n  {\r\n  const dialogConfig = new MatDialogConfig();\r\n //  this.MentorProfileService.populatedForm(row);\r\n  dialogConfig.disableClose = true;\r\n  dialogConfig.autoFocus = true;\r\n  dialogConfig.width = \"60%\";\r\n  this.dialog.open(UpdateProfileComponent,dialogConfig);\r\n  }\r\n\r\n  // sendAction() {\r\n  //   console.log('Sending message');\r\n  //   this.messagingService.send('/server-receiver', {\r\n  //     text: 'This is cool',\r\n  //     text2: 'I\\'m so happy!'\r\n  //   });\r\n  // }\r\n  Logout(){\r\n    Cookie.deleteAll()\r\n    sessionStorage.clear();\r\n  }\r\n//   setPage(page: number) {\r\n//     if (page < 1 || page > this.pager.totalPages) {\r\n//         return;\r\n//     }\r\n\r\n//     // get pager object from service\r\n//     this.pager = this.pagerService.getPager(this.allItems.length, page);\r\n\r\n//     // get current page of items\r\n//     this.pagedItems = this.allItems.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n// }\r\nngOnDestroy() {\r\n  if (this.dataSource) { \r\n    this.dataSource.disconnect(); \r\n  }\r\n}\r\n\r\n}\r\n\r\n","<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n<header>\r\n    <mat-toolbar color=\"primary\" class=\"navbar\">\r\n        <span routerLink=\"/\" id=\"bar1\" style=\"margin-left: 5px;\"><img src=\"/assets/img/header.png\" width=\"60px\"\r\n                height=\"60px\">Nimbleguru</span>\r\n        <span style=\"font-size: 70%;\">{{name}}\r\n            <button mat-button [matMenuTriggerFor]=\"menu\" #menuTrigger id='abc'>\r\n                <div\r\n                    style=\"width: 40px; height: 40px;background-color:#95DBEF ; border-radius: 20px; margin-right: 12px;\">\r\n\r\n                    <div style=\"font-size: 17px; padding: 7px; padding-top: 3px; color: black;\">{{avatar}}</div>\r\n                </div>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item routerLink=\"/mentor-profile\">Profile</button>\r\n                <button mat-menu-item routerLink=\"/\" (click)=\"Logout()\">Logout</button>\r\n\r\n            </mat-menu>\r\n        </span>\r\n        <!-- <span style=\"float: right;margin-left: 78%;\">{{name}}</span><i class=\"fa fa-user-circle fa-2x\" routerLink=\"/student-profile\" id=\"circle\"></i>     -->\r\n        <!-- <button mat-raised-button color=\"accent\" routerLink=\"/login\" (click)=\"Logout()\">Logout</button> -->\r\n    </mat-toolbar>\r\n</header>\r\n\r\n<body>\r\n    <mat-grid-list cols=\"12\" rowHeight=\"100%\">\r\n        <mat-grid-tile colspan=\"3\">\r\n            <mat-grid-tile-header style=\"background-color: black;\">My Profile</mat-grid-tile-header>\r\n            <mat-list role=\"list\">\r\n                <!-- <button mat-raised-button color=\"primary\" routerLink=\"/chat\" *ngFor=\"let message of messageHistory\">{{message}}</button>  -->\r\n                <mat-list-item role=\"listitem\">\r\n                    <div\r\n                        style=\"width: 100px; height: 100px;background-color:#95DBEF ; border-radius: 50px;margin-bottom: 30px; margin-left: 50px;\">\r\n\r\n                        <div style=\"font-size: 60px; padding: 30px; padding-top: 3px; color: black;\">{{avatar}}</div>\r\n                    </div>\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\">\r\n\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\" #name1>\r\n                    <h2><strong>Name :</strong> {{mentor?.name}}</h2>\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\">\r\n                    <h2><strong> Phone Number : </strong>{{mentor?.phoneNumber}} </h2>\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\">\r\n                    <h2><strong> Email :</strong> {{mentor?.email}}</h2>\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\">\r\n                    <h2><strong>Subject :</strong> {{mentor?.subject}}</h2>\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\">\r\n                    <h2><strong>Qualification :</strong> {{mentor?.qualification}} </h2>\r\n                </mat-list-item>\r\n                <mat-list-item role=\"listitem\">\r\n                    <h2><strong>Rating :</strong> {{mentor?.rating}} </h2>\r\n                </mat-list-item>\r\n                <!-- <mat-list-item role=\"listitem\">\r\n          <h2>Time :{{mentor?.time.startTime}} - {{mentor?.time.endTime}} </h2>\r\n        </mat-list-item> -->\r\n                <mat-list-item role=\"listitem\">\r\n                    <button mat-raised-button (click)=OnCreate() color=\"primary\">Update Profile</button>\r\n                </mat-list-item>\r\n            </mat-list>\r\n        </mat-grid-tile>\r\n\r\n\r\n\r\n        <mat-grid-tile colspan=\"9\">\r\n            <mat-grid-tile-header style=\"background-color: black;\">My Previous Connects</mat-grid-tile-header>\r\n            <mat-list role=\"list\" id=\"list1\">\r\n                <mat-list-item role=\"listitem\" style=\"height: auto; margin-left: 37.5%;\">\r\n                </mat-list-item>\r\n                <!-- <div *ngFor = \"let session of mentor?.sessions\"> -->\r\n                <div *ngIf=\"sessionArray.length!=0; then thenBlock else elseBlock\"></div>\r\n                <ng-template #thenBlock>\r\n                    <div class=\"scrollable\">\r\n                        <mat-card class=\"example-session\" *ngFor=\"let session of obs | async\">\r\n                            <mat-card-header>\r\n                                <div mat-card-avatar class=\"example-header-image\"></div>\r\n                                <mat-card-title>{{session.query.charAt(0).toUpperCase() + session.query.substr(1)}}\r\n                                </mat-card-title>\r\n                                <mat-card-subtitle>Subject:&nbsp;{{session.subject}} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                    &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n                                    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                    MentorEmail:&nbsp;{{session.teacherEmail}}</mat-card-subtitle>\r\n                            </mat-card-header>\r\n                            <mat-card-content>\r\n                                <span>\r\n                                    <button style=\"float: right; margin-bottom: 100px;\" mat-button><i\r\n                                            class=\"fa fa-play-circle fa-3x\"\r\n                                            [routerLink]=\"['/history', session.sessionId]\"></i></button>\r\n                                </span>\r\n                                <span>\r\n                                    <!-- <p>Subject:{{session.subject}} MentorEmail:{{session.teacherEmail}}</p> -->\r\n                                    <p>Duration:&nbsp;{{session.duration}} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Taken\r\n                                        on:&nbsp;{{session.startTime | date:'dd MMM, yyyy'}}</p>\r\n                                </span>\r\n                            </mat-card-content>\r\n                        </mat-card>\r\n\r\n                        <mat-paginator [pageSizeOptions]=\"[3, 10, 25, 100]\"></mat-paginator>\r\n                    </div>\r\n                </ng-template>\r\n                <ng-template #elseBlock><div style=\"font-size: 26px; font-weight: 600;\">\r\n                    You haven't taken any session yet!!</div><div style=\"font-size: 26px;\"> Please wait, we will be redirecting a student to you soon.</div></ng-template>\r\n\r\n            </mat-list>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n</body>\r\n\r\n<!-- footer section start here -->\r\n<footer style=\"color: white;\">\r\n    <div>Copyright © Sergbo All rights reserved.</div>\r\n    <div>\r\n        <a style=\"color: white;\" href=\"\">Privacy Statement </a>\r\n        <a style=\"color: white;\" href=\"\">Terms of Use</a>\r\n    </div>\r\n</footer>\r\n<!-- footer section end here -->","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChatApplicationComponent } from './chat-application/chat-application.component';\r\nimport { ChatHistoryComponent } from './chat-history/chat-history.component';\r\nimport { FaqBySubjectComponent } from './faq-by-subject/faq-by-subject.component';\r\n//import { ChatHistoryComponent } from './chat-history/chat-history.component';\r\nimport { FaqComponent } from './faq/faq.component';\r\nimport { FeedbackComponent } from './feedback/feedback.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { LandingPageComponent } from './landing-page/landing-page.component';\r\nimport { LogInPageComponent } from './log-in-page/log-in-page.component';\r\nimport { MentorProfileComponent } from './mentor-profile/mentor-profile.component';\r\nimport { MentorRegistrationComponent } from './mentor-registration/mentor-registration.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { RegisterationPageComponent } from './registeration-page/registeration-page.component';\r\nimport { StudentProfileComponent } from './student-profile/student-profile.component';\r\nimport { StudentliveconnectComponent } from './studentliveconnect/studentliveconnect.component';\r\nimport { UpdateProfileComponent } from './update-profile/update-profile.component';\r\nimport {AuthGuardService as AuthGuard} from './auth-guard.service';\r\nconst routes: Routes = [\r\n  { path: \"student-profile\", component: StudentProfileComponent, },\r\n  { path: \"login\", component: LogInPageComponent },\r\n  { path: \"student-registration\", component: RegisterationPageComponent },\r\n  { path: \"home\", component: HomepageComponent,  },\r\n  { path: \"mentor-profile\", component: MentorProfileComponent,  },\r\n  { path: 'feedback/:sid', component: FeedbackComponent,  },\r\n  { path: \"update-profile\", component: UpdateProfileComponent,  },\r\n  { path: \"frequently-asked-questions\", component: FaqComponent,  },\r\n  { path: \"chat/:id\", component: ChatApplicationComponent,  },\r\n  { path: \"mentor-registration\", component: MentorRegistrationComponent,  },\r\n  {path: \"faq/:subject\", component: FaqBySubjectComponent, },\r\n  { path: \"history/:sessionId\", component: ChatHistoryComponent,  },\r\n  { path: '', component: LandingPageComponent },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}